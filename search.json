[{"path":"https://arcadia-science.github.io/sourmashconsumr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Arcadia Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Sourmash tool facilitates lightweight rapid comparisons potentially large sets sequencing data1 2. Sourmashconsumr provides parsing, analysis, visualization functions outputs generated sourmash commands sketch, compare, gather, taxonomy annotate. sourmash outputs sourmashconsumr works information-rich text files (either CSV JSON). sourmashconsumr functions designed help interpret outputs. sourmashconsumr re-implement functionality original sourmash software.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"how-sourmash-works","dir":"Articles","previous_headings":"Introduction","what":"How sourmash works","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Sourmash uses FracMinHash sketching generate compressed representations sequencing data. Two core parameters determine sequences represented sketches: k-mer size scaled value. k-mer size dictates length sequences represented sketch; defaults k = 21, k = 31, k = 51. sizes somewhat empiric, overlap related genomic sequences given k-mer size roughly approximates taxonomic relationships, substantial overlap k = 21 roughly approximating genus-level relatedness, k = 31 species-level, k = 51 strain-level 3. scaled value dictates fraction k-mers original sequence get included sketch. Approximately 1/scaled value k-mers original sequence retained sketch. common scaled values 1000, 2000, 10,000. scaled value takes advantage fact subset sequencing data can used accurately estimate things like similarity containment dramatically sub-samples original sequences thus facilitating rapid comparisons even large data sets.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"sourmash-outputs-that-sourmashconsumr-works-on","dir":"Articles","previous_headings":"Introduction","what":"Sourmash outputs that sourmashconsumr works on","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"sourmashconsumr package works outputs following sourmash commands. provide brief description command, sure check sourmash documentation complete explanation examples. sourmash sketch: Produces sketches sequence. sequencing data (DNA, protein, 6-frame translation) FASTQ FASTA format can sketched. Files produced sourmash sketch referred signatures may contain many sketches (one sketch k-mer size). sourmash compare: Compares many sketches produces (dis)similarity matrix. abundance information ignored, output represents jaccard distance. abundance information included, output represents angular distance. sourmash gather: Compares query sketch sketches database identify minimum set sketches contain known k-mers query. Typically, sourmash gather run metagenomes determine genomes contained within sample, however sourmash gather can used assess containment query large database sequences (e.g. contamination discovery). sourmash taxonomy annotate: Assigns taxonomic lineages sourmash gather matches. Naming signatures sourmash get sourmashconsumr functions  Many functions sourmashconsumr R package rely signatures names. Signature names set sketch file using --name --merge flags: command create signature three DNA sketches (one k size), scaled value 1000 abundance tracking turned . signature name sample1 contain sequences FASTQ files start sample1 end fastq.gz, written file sample1.sig. signature name read R column, name, read output file sample1.sig R (see ). signature name also propagated outputs sourmash gather sourmash taxonomy annotate; read output files R, signature name column query_name. Many sourmashconsumr functions use name query_name columns. didn’t use --name flag sketched signatures, two options create name/query_name column: like add names sourmash signatures, can use sourmash command sourmash sig rename. might best solution plan work signatures . already ran sourmash gather signatures, can instead edit column R excel. example, something like R:","code":"sourmash sketch dna -p k=21,k=31,k=51,scaled=1000,abund -o sample1.sig --name sample1 sample1*fastq.gz sourmash signature rename file1.sig \"new name\" -o renamed.sig sourmashconsumr::read_gather(\"my_gather_results.csv\") %>%   dplyr::mutate(query_name = basename(query_filename))"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"can install development version sourmashconsumr GitHub : Eventually, hope release sourmashconsumr CRAN provide conda-forge package. ’ll update instructions ’ve done . access functions sourmashconsumr package:","code":"# install.packages(\"remotes\") remotes::install_github(\"Arcadia-Science/sourmashconsumr\") library(sourmashconsumr)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"problems-getting-help","dir":"Articles","previous_headings":"","what":"Problems & getting help","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"encounter problems using sourmashconsumr, please post issue issue tracker: https://github.com/Arcadia-Science/sourmashconsumr/issues. encounter problems sourmash, please post issue sourmash issue tracker: https://github.com/sourmash-bio/sourmash/issues.","code":""},{"path":[]},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"load-example-data-and-vignette-dependencies","dir":"Articles","previous_headings":"Package functionality","what":"Load example data and vignette dependencies","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Load packages vignette uses: Load example data sets: Make metadata frame corresponds example data:","code":"library(sourmashconsumr) library(dplyr) library(ggplot2) library(RColorBrewer) data(gut_compare_df) data(gut_signatures_df) data(gut_gather_df) data(gut_taxonomy_annotate_df) # create a metadata data frame  run_accessions <- c(\"SRR5936131\", \"SRR5947006\", \"SRR5935765\",                     \"SRR5936197\", \"SRR5946923\", \"SRR5946920\") groups <- c(\"cd\", \"cd\", \"cd\", \"nonibd\", \"nonibd\", \"nonibd\") metadata <- data.frame(run_accessions = run_accessions, groups = groups)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"example-data","dir":"Articles","previous_headings":"Package functionality > Load example data and vignette dependencies","what":"Example data","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"sourmashconsumr package comes example data sets can load get feel data formats play around functions package. example data six samples iHMP IBD cohort. short shotgun metagenomes stool microbiomes. iHMP longitudinal study, samples example data time point 1 samples taken different individuals. individuals symptomatic time point 1, three individuals diagnosed Crohn’s disease (cd) end year, three individuals (nonIBD). can see complete set commands used generate data . ’ve documented content test data sets, including explanation encoded column. ’re trouble understanding content sourmash output files, data set documentation may help. Use following code access information:","code":"?gut_gather_df"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"reading-sourmash-outputs-into-r","dir":"Articles","previous_headings":"Package functionality","what":"Reading sourmash outputs into R","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"sourmashconsumr functions read sourmash outputs start read_. functions accepts compressed uncompressed files can read one multiple files time. multiple file paths passed function, files read single data frame. like read multiple files , Sys.glob() function list.files() function useful determine paths many files. Explanation accessing external files packaged sourmashconsumr  functions read external files, ’ve also included example sourmash outputs package demonstrate read*() functions work. Specifying paths data files packaged R package bit ugly…takes advantage base R function system.file information package derive file paths. helpful allows anyone access files package matter package installed computer, syntax can confusing example ends looking lot different code actually write. Whenever see system.file() vignette, know go run similar code sourmash outputs, need specify path file run command without accompanying system.file() code. See example :","code":"# how we have to specify paths so that anyone can access the package data fpath <- system.file(\"extdata\", \"SRR5947006.sig.gz\", package=\"sourmashconsumr\") signature_df <- read_signature(fpath) # how you will specify a path when you actually run the code signature_df <- read_signature(\"path/to/your_signature_file.sig\")"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"reading-sourmash-sigatures-into-r","dir":"Articles","previous_headings":"Package functionality > Reading sourmash outputs into R","what":"Reading sourmash sigatures into R","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"sourmashconsumr function read_signature() reads sourmash signatures produced sourmash sketch sourmash compute function data frame. many signatures like read data frame, can pass character vector file paths:","code":"fpath <- system.file(\"extdata\", \"SRR5947006.sig.gz\", package=\"sourmashconsumr\") signature_df <- read_signature(fpath) head(signature_df) #> # A tibble: 6 × 16 #>   class     email hash_…¹ filen…² name  license   num ksize  seed max_h…³ scaled #>   <chr>     <chr> <chr>   <chr>   <chr> <chr>   <int> <int> <int>   <dbl>  <dbl> #> 1 sourmash… \"\"    0.murm… SRR594… SRR5… CC0         0    21    42 9.22e13 200000 #> 2 sourmash… \"\"    0.murm… SRR594… SRR5… CC0         0    21    42 9.22e13 200000 #> 3 sourmash… \"\"    0.murm… SRR594… SRR5… CC0         0    21    42 9.22e13 200000 #> 4 sourmash… \"\"    0.murm… SRR594… SRR5… CC0         0    21    42 9.22e13 200000 #> 5 sourmash… \"\"    0.murm… SRR594… SRR5… CC0         0    21    42 9.22e13 200000 #> 6 sourmash… \"\"    0.murm… SRR594… SRR5… CC0         0    21    42 9.22e13 200000 #> # … with 5 more variables: mins <dbl>, md5sum <chr>, abundances <int>, #> #   molecule <chr>, version <dbl>, and abbreviated variable names #> #   ¹​hash_function, ²​filename, ³​max_hash # grab the files paths for two signatures in the sourmashconsumr example data fpath1 <- system.file(\"extdata\", \"SRR5947006.sig.gz\", package=\"sourmashconsumr\") fpath2 <- system.file(\"extdata\", \"SRR5935765.sig.gz\", package=\"sourmashconsumr\") fpaths <- c(fpath1, fpath2) # read in the signature files signature_df <- read_signature(fpaths)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"reading-the-csv-output-of-sourmash-compare","dir":"Articles","previous_headings":"Package functionality > Reading sourmash outputs into R","what":"Reading the CSV output of sourmash compare","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"sourmash compare output square matrix. CSV column names row names, rownames symmetrical column names. read_compare_csv() function reads compare CSV file adds row names. can choose whether row labels read column named “sample” row names using sample_to_rownames argument.","code":"fpath <- system.file(\"extdata\", \"gut_compare.csv.gz\", package = \"sourmashconsumr\") compare_df <- read_compare_csv(fpath, sample_to_rownames = F) #> Rows: 6 Columns: 6 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (6): SRR5935765, SRR5936131, SRR5936197, SRR5946920, SRR5946923, SRR5947006 #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. compare_df #> # A tibble: 6 × 7 #>   sample     SRR5935765 SRR5936131 SRR5936197 SRR5946920 SRR5946923 SRR5947006 #>   <chr>           <dbl>      <dbl>      <dbl>      <dbl>      <dbl>      <dbl> #> 1 SRR5935765      1          0.283      0.269     0.139       0.197     0.115  #> 2 SRR5936131      0.283      1          0.488     0.148       0.350     0.135  #> 3 SRR5936197      0.269      0.488      1         0.183       0.546     0.134  #> 4 SRR5946920      0.139      0.148      0.183     1           0.175     0.0943 #> 5 SRR5946923      0.197      0.350      0.546     0.175       1         0.172  #> 6 SRR5947006      0.115      0.135      0.134     0.0943      0.172     1"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"reading-the-csv-output-of-sourmash-gather","dir":"Articles","previous_headings":"Package functionality > Reading sourmash outputs into R","what":"Reading the CSV output of sourmash gather","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"read_gather() function reads CSV output sourmash gather. can optionally filter matches using intersect_bp_threshold. function filtering default. However, sourmash gather uses threshold 50,000 base pairs, decreased value ran sourmash gather, may make sense filter intersect_bp_thershold = 50000. false positives caused contamination reference genomes database, low filtering thresholds can improve accuracy.","code":"fpath <- system.file(\"extdata\", \"SRR5946920_gather_gtdbrs207_reps.csv.gz\", package = \"sourmashconsumr\") gather_df <- read_gather(fpath, intersect_bp_threshold = 50000) head(gather_df) #> # A tibble: 6 × 30 #>   inters…¹ f_ori…² f_match f_uni…³ f_uni…⁴ avera…⁵ media…⁶ std_a…⁷ filen…⁸ name  #>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   <chr> #> 1  3787000  0.0318   0.583  0.0318  0.0496   10.9        9   25.2  /Users… GCF_… #> 2  3544000  0.0298   0.707  0.0297  0.0956   22.4       21   17.1  /Users… GCF_… #> 3  3622000  0.0304   0.773  0.0294  0.0298    7.07       6    5.44 /Users… GCF_… #> 4  2993000  0.0252   0.613  0.0251  0.0140    3.89       3    4.51 /Users… GCF_… #> 5  2941000  0.0247   0.619  0.0240  0.0531   15.5       14   10.7  /Users… GCF_… #> 6  2389000  0.0201   0.585  0.0192  0.0624   22.7       21   13.6  /Users… GCF_… #> # … with 20 more variables: genome_accession <chr>, md5 <chr>, #> #   f_match_orig <dbl>, unique_intersect_bp <dbl>, gather_result_rank <dbl>, #> #   remaining_bp <dbl>, query_filename <chr>, query_name <chr>, #> #   query_md5 <chr>, query_bp <dbl>, ksize <dbl>, moltype <chr>, scaled <dbl>, #> #   query_n_hashes <dbl>, query_abundance <lgl>, query_containment_ani <dbl>, #> #   match_containment_ani <dbl>, average_containment_ani <dbl>, #> #   max_containment_ani <dbl>, potential_false_negative <lgl>, and …"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"reading-the-csv-output-of-sourmash-taxonomy-annotate","dir":"Articles","previous_headings":"Package functionality > Reading sourmash outputs into R","what":"Reading the CSV output of sourmash taxonomy annotate","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"read_taxonomy_annotate() function reads CSV output sourmash taxonomy annotate. Taxonomy annotate adds taxonomic lineage column sourmash gather output. can filter intersect_bp_threshold (see ). can also separate lineage taxonomy ranks using separate_lineage. function assumes lineage ranks separated semi-colons (;), lineage composed domain, phylum, class, order, family, genus, species, strain. information missing, back-filled NAs.","code":"fpath <- system.file(\"extdata\", \"SRR5946920_gather_gtdbrs207_reps.with-lineages.csv.gz\", package = \"sourmashconsumr\") taxonomy_annotate_df <- read_taxonomy_annotate(fpath,                                                 intersect_bp_threshold = 50000,                                                separate_lineage = T) head(taxonomy_annotate_df) #> # A tibble: 6 × 40 #>   inters…¹ f_ori…² f_match f_uni…³ f_uni…⁴ avera…⁵ media…⁶ std_a…⁷ filen…⁸ name  #>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   <chr> #> 1  3787000  0.0318   0.583  0.0318  0.0496   10.9        9   25.2  /Users… GCF_… #> 2  3544000  0.0298   0.707  0.0297  0.0956   22.4       21   17.1  /Users… GCF_… #> 3  3622000  0.0304   0.773  0.0294  0.0298    7.07       6    5.44 /Users… GCF_… #> 4  2993000  0.0252   0.613  0.0251  0.0140    3.89       3    4.51 /Users… GCF_… #> 5  2941000  0.0247   0.619  0.0240  0.0531   15.5       14   10.7  /Users… GCF_… #> 6  2389000  0.0201   0.585  0.0192  0.0624   22.7       21   13.6  /Users… GCF_… #> # … with 30 more variables: genome_accession <chr>, md5 <chr>, #> #   f_match_orig <dbl>, unique_intersect_bp <dbl>, gather_result_rank <dbl>, #> #   remaining_bp <dbl>, query_filename <chr>, query_name <chr>, #> #   query_md5 <chr>, query_bp <dbl>, ksize <dbl>, moltype <chr>, scaled <dbl>, #> #   query_n_hashes <dbl>, query_abundance <lgl>, query_containment_ani <dbl>, #> #   match_containment_ani <dbl>, average_containment_ani <dbl>, #> #   max_containment_ani <dbl>, potential_false_negative <lgl>, lineage <chr>, …"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"working-with-sourmash-signatures-fracminhash-sketches","dir":"Articles","previous_headings":"Package functionality","what":"Working with sourmash signatures (FracMinHash sketches)","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Sourmash signatures compressed representations sequencing data. data can used many different purposes machine learning4, differential k-mer abundance analysis, sequencing depth/rarefaction analysis.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"visualizing-shared-k-mer-content-between-samples-with-an-upset-plot","dir":"Articles","previous_headings":"Package functionality > Working with sourmash signatures (FracMinHash sketches)","what":"Visualizing shared k-mer content between samples with an upset plot","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"functions from_signatures_to_upset_df() plot_signatures_upset() produce upset plot depicts number k-mers shared sets samples. absolute size intersection number shared hashes (k-mers) scaled FracMinHash sketches (see sourmash works explanation sketches content.). plots take abundance information account. upset plot alternative venn diagram; bottom half plot shows samples shared content top half plot shows size intersection specified samples. plot good visualizing exact sequencing content overlap samples. lot variation samples, might difficult interpret plot may many intersections. Still, provides nice complement sourmash compare results plots gives information nature intersections samples.  additional arguments can passed ComplexUpset::upset() can added end function control look plot. ComplexUpset lot documentation examples modifying plots. , use arguments modify common parts upset plot. use bright colors make obvious components plot arguments modify.","code":"gut_signatures_df <- gut_signatures_df %>%   dplyr::filter(ksize == 31)  gut_signatures_upset_df <- from_signatures_to_upset_df(signatures_df = gut_signatures_df) head(gut_signatures_upset_df) #>              SRR5935765 SRR5936131 SRR5936197 SRR5946920 SRR5946923 SRR5947006 #> 7504968134            1          1          0          1          0          1 #> 47418666416           1          0          0          0          0          0 #> 91683251943           1          1          0          1          0          1 #> 133675644697          1          0          0          0          0          0 #> 232110850204          1          0          0          0          0          0 #> 320454190342          1          1          1          1          1          0 plot_signatures_upset(gut_signatures_upset_df) plot_signatures_upset(upset_df = gut_signatures_upset_df,                       # arguments to ComplexUpset::upset():                       stripes = c(\"cyan\"),                        name = \"Groups!\",                        min_size = 10,                       themes = ComplexUpset::upset_default_themes(text=element_text(size = 16, color = \"orange\"),                                                                   axis.text.y = element_text(size = 13, color = \"blue\"),                                                                   panel.grid = element_blank()))"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"assessing-sample-sequencing-depth-using-rarefaction-accumulation-curves","dir":"Articles","previous_headings":"Package functionality > Working with sourmash signatures (FracMinHash sketches)","what":"Assessing sample sequencing depth using rarefaction (accumulation) curves","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"goal from_signatures_to_rarefaction_df() plot_signatures_rarefaction() functions produce rarefaction curve assess whether adequate sequencing depth reached capture complexity sample sequenced. functions work raw trimmed reads short long read sequencing data generated library types (e.g. genomes, transcriptomes, metagenomes, metatranscriptomes, etc.). library non-complex (e.g. amplicon sequencing data), may need use lower scaled value. Rarefaction curves rely abundance sequences sample. Therefore, makes sense generate rarefaction curves signatures made FASTQ files abundance tracking turned . , curves may accurate build sequences many samples similar environments. case signatures built reads k-mer trimmed, filtering step removes hashes (k-mers) observed observed one sample likely sequencing errors. Please note filtering process may invalidate downstream rarefaction curve convergence estimation many methods evaluate singletons doubletons data set. function from_signatures_to_rarefaction_df() may take run. ’ve found produces fairly consistent results even signatures dramatically downsampled high scaled value (e.g. scaled = 100000). can downsample signatures sourmash prior reading R using function sourmash sig downsample. See sourmash documentation details.  plot produced plot_signatures_rarefaction ggplot2 plot, can modify adding additional layers:  Color sample name:  Add metadata rarefaction_df use plot:","code":"# filter to a single k-mer size gut_signatures_df <- gut_signatures_df %>%   dplyr::filter(ksize == 31)  rarefaction_df <- from_signatures_to_rarefaction_df(signatures_df = gut_signatures_df) head(rarefaction_df) #>         name num_kmers_sampled num_kmers_observed #> 1 SRR5935765                 1           1.000000 #> 2 SRR5935765                 2           1.993401 #> 3 SRR5935765                 3           2.980279 #> 4 SRR5935765                 4           3.960713 #> 5 SRR5935765                 5           4.934776 #> 6 SRR5935765                 6           5.902544 rarefaction_plt <- plot_signatures_rarefaction(rarefaction_df = rarefaction_df, fraction_of_points_to_plot = 1) rarefaction_plt rarefaction_plt +   ggplot2::theme_minimal() rarefaction_plt +   ggplot2::theme_minimal() +   ggplot2::geom_point(ggplot2::aes(color = name)) # join the metadata data frame with the rarefaction_df rarefaction_df <- rarefaction_df %>%   dplyr::left_join(metadata, by = c(\"name\" = \"run_accessions\"))  # create and modify a plot plot_signatures_rarefaction(rarefaction_df = rarefaction_df, fraction_of_points_to_plot = 1) +   ggplot2::theme_minimal() +   ggplot2::geom_point(ggplot2::aes(color = groups))"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"working-with-the-csv-output-of-sourmash-compare","dir":"Articles","previous_headings":"Package functionality","what":"Working with the CSV output of sourmash compare","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Sourmash compare outputs --similarity matrix group samples (default, matrix similarity matrix, users can switch dissimilarity matrix command line flag). samples sketched abundance tracking done (e.g. abundance k-mer recorded), similarity matrix encodes angular distance. sourmashconsumr package supports two visualizations CSV output sourmash compare, MDS (ordination) plot clustered heat map.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"mds-plot-from-sourmash-compare-output","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash compare","what":"MDS plot from sourmash compare output","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"MDS plot allows visualize similar sample every sample two dimensional space. Samples cluster closely together similar.  MDS plot ggplot2 object, can modify adding layers.  can also add metadata directly data frame output make_compare_mds can add plot:","code":"gut_compare_mds_df <- make_compare_mds(gut_compare_df) head(gut_compare_mds_df) #>       sample       MDS1        MDS2 #> 1 SRR5935765  0.0775339  0.13464650 #> 2 SRR5936131 -0.3745227 -0.03349708 #> 3 SRR5936197 -0.5022308 -0.03442290 #> 4 SRR5946920  0.5039572  0.64805445 #> 5 SRR5946923 -0.3743700 -0.10706435 #> 6 SRR5947006  0.6696324 -0.60771661 compare_plt <- plot_compare_mds(gut_compare_mds_df) compare_plt compare_plt +   ggplot2::theme_minimal() gut_compare_mds_df %>%   dplyr::left_join(metadata, by = c(\"sample\" = \"run_accessions\")) #>       sample       MDS1        MDS2 groups #> 1 SRR5935765  0.0775339  0.13464650     cd #> 2 SRR5936131 -0.3745227 -0.03349708     cd #> 3 SRR5936197 -0.5022308 -0.03442290 nonibd #> 4 SRR5946920  0.5039572  0.64805445 nonibd #> 5 SRR5946923 -0.3743700 -0.10706435 nonibd #> 6 SRR5947006  0.6696324 -0.60771661     cd  plot_compare_mds(gut_compare_mds_df) +   ggplot2::geom_point(ggplot2::aes(color = groups))"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"heatmap-from-sourmash-compare-output","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash compare","what":"Heatmap from sourmash compare output","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"plot_compare_heatmap object works directly output read_compare_csv(). ’s wrapper function base::heatmap(), can add arguments accepted base::heatmap() modify look plot.","code":"plot_compare_heatmap(gut_compare_df, cexRow = 0.75, cexCol = 0.75)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"working-with-the-csv-output-of-sourmash-gather","dir":"Articles","previous_headings":"Package functionality","what":"Working with the CSV output of sourmash gather","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Sourmash gather compares query (, metagenome) database (, GTDB rs207 representatives) provides minimum set genomes database cover (contain) k-mers query. Sourmash gather works best metagenomes environments sequenced many genomes isolated sequenced. k-mers specific, genome needs database sourmash gather find match. Sourmash gather won’t find much species (k = 31) genus (k = 21) similarity, organisms sample new, sourmash won’t able label . Sourmashconsumr produces two plots sourmash gather results: high-level bargraph summarizes fraction sample matches database, upset plot showing intersections genomes matched multiple samples. plots designed visualize output running sourmash gather many samples plot.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"fraction-classifed-plot-from-sourmash-gather-output","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash gather","what":"Fraction classifed plot from sourmash gather output","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"actual number plotted referred abundance-weighted unique fraction. default, sourmash gather returns following information: f_orig_query: fraction original query (metagenome sample) matched genome f_unique_to_query: fraction matched genome unique query. Given multiple matched genomes cover portion query, column reports fraction query covered matched genome, doesn’t allow multiple genomes cover portion. , genome covers k-mers metagenome sample gets “anchor” k-mers, genomes cover k-mers don’t get . column removes double counting problem arises multiple genomes database contain sequences. f_unique_weighted: column weights f_unique_to_query abundance k-mers. important context metagenome, abundance reflects abundance genome original microbial community. plots use f_unique_weighted look taxonomic composition metagenome sample. value similar looking fraction reads map reference genomes.","code":"plot_gather_classified(gather_df = gut_gather_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"upset-plot-from-sourmash-gather-output","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash gather","what":"Upset plot from sourmash gather output","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"upset plot alternative venn diagram; bottom half plot shows samples shared content top half plot shows size intersection specified samples. upset plot visualizes intersection genomes identified different samples.  bars upset plot can optionally colored database match came . useful use many databases running sourmash gather. Since used one database classify samples example data, visualization isn’t much rewarding.  can change palette passing character vector colors palette argument. palette specified, defaults RColorBrewer’s Set2.  See Visualizing shared k-mer content samples upset plot examples modify look upset plot.","code":"gut_gather_upset_df <- from_gather_to_upset_df(gather_df = gut_gather_df) head(gut_gather_upset_df) #>                 SRR5935765 SRR5936131 SRR5936197 SRR5946920 SRR5946923 #> GCF_002234575.2          1          1          0          1          0 #> GCF_001314995.1          1          1          1          1          1 #> GCF_000154205.1          1          1          1          1          1 #> GCF_000012825.1          1          1          1          1          1 #> GCF_002222615.2          1          1          1          1          1 #> GCF_000466485.1          1          1          0          1          0 #>                 SRR5947006 #> GCF_002234575.2          1 #> GCF_001314995.1          1 #> GCF_000154205.1          1 #> GCF_000012825.1          1 #> GCF_002222615.2          0 #> GCF_000466485.1          1 plot_gather_upset(upset_df = gut_gather_upset_df) plot_gather_upset(upset_df = gut_gather_upset_df,                    color_by_database = T,                    gather_df = gut_gather_df) plot_gather_upset(upset_df = gut_gather_upset_df,                    color_by_database = T,                    gather_df = gut_gather_df,                   palette = \"red\")"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"working-with-the-csv-output-of-sourmash-taxonomy-annotate","dir":"Articles","previous_headings":"Package functionality","what":"Working with the CSV output of sourmash taxonomy annotate","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Sourmash taxonomy makes sourmash gather output interpretable adding taxonomic labels sourmash gather results. Sourmash gather outputs statistics samples database found query sample. Taxonomic labels contextualize results allow new analyses like agglomeration taxonomic lineage summarize results visualizing results context taxonomy.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"agglomerating-up-levels-of-taxonomy","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash taxonomy annotate","what":"Agglomerating up levels of taxonomy","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Inspired phyloseq::tax_glom(), method summarizes variables output sourmash gather genomes taxonomy user-specified taxonomy rank. Agglomeration occurs within sample, meaning variable summed within query_name. function returns data frame columns ‘lineage’, ‘query_name’, variable specified glom_var.","code":"glom_df <-  tax_glom_taxonomy_annotate(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                        tax_glom_level = \"genus\",                                        glom_var = \"f_unique_to_query\")  head(glom_df) #> # A tibble: 6 × 3 #>   lineage                                                        query…¹ f_uni…² #>   <chr>                                                          <chr>     <dbl> #> 1 d__Bacteria;p__Actinobacteriota;c__Actinomycetia;o__Propionib… SRR593… 1.32e-3 #> 2 d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f… SRR593… 9.56e-4 #> 3 d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f… SRR593… 1.33e-1 #> 4 d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f… SRR593… 5.25e-2 #> 5 d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f… SRR593… 1.68e-3 #> 6 d__Bacteria;p__Bacteroidota;c__Bacteroidia;o__Bacteroidales;f… SRR593… 8.56e-4 #> # … with abbreviated variable names ¹​query_name, ²​f_unique_to_query"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"visualizing-shared-taxonomic-lineages-between-samples-with-an-upset-plot","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash taxonomy annotate","what":"Visualizing shared taxonomic lineages between samples with an upset plot","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"function produces list three objects. first, gut_taxonomy_upset_inputs$upset_df upset-formatted data frame indicating presense/absence lineage sample. second, gut_taxonomy_upset_inputs$taxonomy_annotate_df, re-formatted data frame taxonomy annotation information. third, gut_taxonomy_upset_inputs$tax_glom_level, records taxonomy agglomeration level used create upset inputs. list can fed plot_taxonomy_annotate_upset() produce upset plot:  fill specified, bar plot upper portion upset plot colored taxonomic level indicated. level must used from_taxonomy_annotate_to_upset_inputs(). can change palette passing character vector colors palette argument. palette specified, defaults RColorBrewer’s Set2.  Since upset plots based presence absence lineages, counts upset barplot reflect total number lineages observed given taxonomic level, rather many lineages shared samples level – e.g., numbers weighted. See Visualizing shared k-mer content samples upset plot examples modify look upset plot.","code":"gut_taxonomy_upset_inputs <- from_taxonomy_annotate_to_upset_inputs(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                                                      tax_glom_level = \"order\") plot_taxonomy_annotate_upset(upset_inputs = gut_taxonomy_upset_inputs,                               fill = \"phylum\") plot_taxonomy_annotate_upset(upset_inputs = gut_taxonomy_upset_inputs,                               fill = \"phylum\",                              palette = c(\"#999999\", \"#E69F00\", \"#56B4E9\", \"#009E73\",                                          \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\"))"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"visualizing-taxonomy-with-a-sankey-plot","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash taxonomy annotate","what":"Visualizing taxonomy with a Sankey plot","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Sankey plot designed show taxonomic breakdown one many samples. ribbons plot progressively split taxonomic lineage becomes specific (e.g. domain phylum, phylum class, etc.). ribbon width displays relative abundance taxonomic lineage. tax_glom_level specifies level taxonomic lineage stop displaying taxonomy. Sankey plot can generated one many samples. example plot generated one sample:  plot generated many samples:  colors Sankey plot built using function grDevices::colorRampPalette() RColorBrewer palette Set2. change palette, supply palette argument hexcodes like ramp .  default, taxonomic labels displayed plot (label = TRUE). like control look labels, use label = FALSE add layer output plot labels:","code":"plot_taxonomy_annotate_sankey(taxonomy_annotate_df = gut_taxonomy_annotate_df %>%                                 dplyr::filter(query_name == \"SRR5935765\"),                                tax_glom_level = \"family\") plot_taxonomy_annotate_sankey(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                tax_glom_level = \"order\") plot_taxonomy_annotate_sankey(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                tax_glom_level = \"order\",                               palette = RColorBrewer::brewer.pal(8, \"Set3\")) plot_taxonomy_annotate_sankey(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                tax_glom_level = \"order\",                               palette = RColorBrewer::brewer.pal(8, \"Set3\"),                               label = FALSE) +   ggforce::geom_parallel_sets_labels(colour = 'black', angle = 360, size = 2, hjust = -0.25)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"visualizing-taxonomic-changes-over-time-with-a-time-series-alluvial-plot","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash taxonomy annotate","what":"Visualizing taxonomic changes over time with a time series alluvial plot","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"time series alluvial plot shows lineages observed samples change. designed show fraction taxonomic lineages community change time samples taken time series. One level taxonomy (e.g. order) shown throughout plot, alluvial ribbons show fraction lineages change samples. example data aren’t actually time series, plot doesn’t really make sense. However, demonstration purposes, ’ll use test data anyway show plot work working time series. Eventually, ’ll update vignette show looks like real time series data.  plot, f_unique_weighted value sourmash gather results agglomerated user-specified tax_glom_level. fraction_threshold minimum fraction lineage needs present least one sample time series lineage get alluvial ribbon plot. lineage present less threshold, get grouped “” category. plot outputs plot_taxonomy_annotate_ts_alluvial() ggplot. change palette, add layer plot.  Alternatively, can set palette providing character vector palette argument:  default, taxonomic labels displayed plot (label = TRUE). like control look labels, use label = FALSE add layer output plot labels:","code":"time_df <- data.frame(query_name = metadata$run_accessions,                       time = c(1, 2, 3, 4, 5, 6))  plot_taxonomy_annotate_ts_alluvial(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                    time_df = time_df,                                     tax_glom_level = \"family\",                                    fraction_threshold = 0.01) plot_taxonomy_annotate_ts_alluvial(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                    time_df = time_df,                                     tax_glom_level = \"family\",                                    fraction_threshold = 0.01) +   ggplot2::scale_fill_brewer(palette = \"Paired\") #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale. plot_taxonomy_annotate_ts_alluvial(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                    time_df = time_df,                                     tax_glom_level = \"family\",                                    fraction_threshold = 0.01,                                    palette = c('#A6CEE3', '#1F78B4', '#B2DF8A',                                                 '#33A02C', '#FB9A99', '#E31A1C',                                                 '#FDBF6F', '#FF7F00', '#CAB2D6',                                                 '#6A3D9A', '#FFFF99', '#B15928')) plot_taxonomy_annotate_ts_alluvial(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                    time_df = time_df,                                     tax_glom_level = \"family\",                                    fraction_threshold = 0.01,                                    label = F) +   ggalluvial::stat_alluvium(geom = \"text\", size = 2, decreasing = FALSE, min.y = 0.005)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"converting-from-taxonomy-annotate-to-phyloseq-object","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash taxonomy annotate","what":"Converting from taxonomy annotate to phyloseq object","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Phyloseq R package exploring microbiome data. particular, phyloseq provides number visualizations (ordination, alpha diversity, heatmaps, networks, etc.). sourmashconsumr package provides function, from_taxonomy_annotate_to_phyloseq(), convert sourmash sourmash taxonomy annotate phyloseq object. object can used many built-phyloseq functions:  case, phyloseq object built number abundance-weighted unique hashes (k-mers) identified sample taxonomic lineage. means scaled value impact counts final phyloseq object. Therefore, ’s best build phyloseq objects samples sketched gathered using scaled values.","code":"gut_phyloseq <- from_taxonomy_annotate_to_phyloseq(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                                    metadata_df = metadata %>%                                                     tibble::column_to_rownames(\"run_accessions\")) gut_phyloseq #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 437 taxa and 6 samples ] #> sample_data() Sample Data:       [ 6 samples by 1 sample variables ] #> tax_table()   Taxonomy Table:    [ 437 taxa by 8 taxonomic ranks ] phyloseq::plot_bar(gut_phyloseq)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"converting-from-taxonomy-annotate-to-a-metacoder-object","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash taxonomy annotate","what":"Converting from taxonomy annotate to a metacoder object","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"Metacoder R package visualizing heat trees taxonomic data. sourmashconsumr package provides function, from_taxonomy_to_metacoder(), convert output sourmash taxonomy annotate metacoder object. object can used built-metacoder visualizations like heattree():  samples interest come two different groups, can also use metacoder functions compare_groups heat_tree_matrix visualize differences groups. Note works metacoder >= 0.3.5.3. may need install development version metacoder access functionality. can check version metacoder installed using packageVersion(\"metacoder\"). (time vignette written, fucntionality available CRAN code executed.) Like phyloseq object, metacoder object built number abundance-weighted unique hashes (k-mers) identified sample taxonomic lineage. means scaled value impact counts final metacoder object. Therefore, ’s best build metacoder objects samples sketched gathered using scaled values.","code":"gut_metacoder <- from_taxonomy_annotate_to_metacoder(taxonomy_annotate_df = gut_taxonomy_annotate_df,                                                       intersect_bp_threshold = 50000,                                                       tax_glom_level = \"order\",                                                      groups = metadata) #> Summing per-taxon counts from 6 columns for 43 taxa #> Calculating number of samples with a value greater than 0 for 6 columns in 2 groups for 43 observations # generate a heat_tree plot with taxa from all samples, agglomerated to the order level set.seed(1) # This makes the plot appear the same each time it is run  metacoder::heat_tree(gut_metacoder,                       node_label = taxon_names,                      node_size = n_obs,                      node_size_axis_label = \"k-mer abundance\",                      layout = \"davidson-harel\", # The primary layout algorithm                      initial_layout = \"reingold-tilford\") # Node location algorithm # use metacoder function compare_groups() to compare abundances between cd and nonibd gut microbiomes gut_metacoder$data$diff_table <- metacoder::compare_groups(gut_metacoder, data = \"tax_abund\",                                                            cols = metadata$run_accessions,                                                            groups = metadata$groups) # visualize the differences between groups using the metacoder function heat_tree_matrix() metacoder::heat_tree_matrix(gut_metacoder,                             data = \"diff_table\",                             node_size = n_obs,                             node_label = taxon_names,                             node_color = log2_median_ratio,                             node_color_range = metacoder::diverging_palette(),                             node_color_trans = \"linear\",                             node_color_interval = c(-3, 3),                             edge_color_interval = c(-3, 3),                             node_size_axis_label = \"Abund of taxonomic lineage\",                             node_color_axis_label = \"Log2 ratio median proportions\")"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"detecting-whether-multiple-strains-of-the-same-species-are-present-in-a-single-metagenome","dir":"Articles","previous_headings":"Package functionality > Working with the CSV output of sourmash taxonomy annotate","what":"Detecting whether multiple strains of the same species are present in a single metagenome","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"sourmashconsumr package introduces function detect whether multiple strains species likely present single metagenome. relies f_match metric output sourmash gather well taxonomic lineage (species) assigned sourmash taxonomy annotate. See figure explanation two pieces information combined estimate whether multiple strains present. case, reference database used sourmash gather composed four genomes species (blue, orange, green, yellow). genome represented sketch k-mers. k-mers shared genomes database others present genomes. sourmash gather first finds best match k-mers metagenome k-mers database. example one genome present (purple), 0.8 (80%) k-mers overlap blue genome returned best match. k-mers subtracted search repeated. orange genome next best match 0.2 (20%) k-mers overlapping, returned next. order genome matches reported demarcated number next box surrounds k-mers matched given genome. fraction reference genome found metagenome one metrics reported sourmash gather output (f_match). one strain (genome) species present metagenome, summed fraction genomes matched exceed ~1. multiple strains present first match found sourmash gather may account k-mers strains. summing fraction matches, metagenome sequenced sufficient depth, summed fraction exceed ~1.  demonstrate use approach results sourmash taxonomy annotate. first read CSV file produced sourmash taxonomy annotate filter contain valid taxonomic lineages. , use function from_taxonomy_annotate_to_multi_strains() determine species likely multiple strains present visualize species.","code":"cami_taxonomy_annotate_df <- read_taxonomy_annotate(\"https://github.com/Arcadia-Science/2022-sourmashconsumr-validation/files/10513494/CAMI_low_vs_source_genomes.with-lineages.csv\") %>%   dplyr::filter(!species %in% c(\"unidentified\", \"unidentified virus\", \"unidentified plasmid\", \"Janthinobacterium species\")) #> File does not exist locally. Checking as url. If you did not pass a url, please provide a valid file path and retry. The Sys.glob() function might help if you're specifying multiple file paths. multi_strain <- from_taxonomy_annotate_to_multi_strains(cami_taxonomy_annotate_df) multi_strain$plt"},{"path":"https://arcadia-science.github.io/sourmashconsumr/articles/sourmashconsumr.html","id":"upset-utility-functions","dir":"Articles","previous_headings":"Package functionality","what":"Upset utility functions","title":"Using sourmashconsumr to parse, analyze, and visualize the outputs of the sourmash python package","text":"sourmashconsumr package includes utility functions create work upset-formatted data frames. data frames record presence-absence value intersected many samples. columns sample names, rows object shared samples. sample contained object, 1 appears column; , 0 appears. functions sourmashconsumr package pre-process post-process data structure extract information . from_list_to_upset_df() function inspired UpSetR::fromList(). creates presence-absence data frame seen , unlike UpSetR::fromList() function, preserves identity objects row names. rownames recording row identity can act index add metadata presence-absence data frame can visualized. sourmashconsumr package, necessary able color upset plot bar graphs group. functions from_upset_df_to_intersection_members(), from_upset_df_to_intersection_summary(), from_upset_df_to_intersections() take upset-formatted data frame input report identity intersections groups samples. from_upset_df_to_intersections() reports samples contain object. object recorded row name, intersection reported sample names separated underscore. sample doesn’t contain object, sample name recorded 0. order column names consistent objects. from_upset_df_to_intersection_summary() summarizes size intersections. , sample SRR5946923 47 objects observed sample. intersection sizes match reported upset plot upper bar graph. from_upset_df_to_intersection_members() reports identity objects shared group. object output list, can indexed name. example, curious objects observed samples, use following: upset functions work upset-formatted data frame, just created sourmashconsumr package. meaningful upset data frame row names.","code":"head(gut_gather_upset_df) #>                 SRR5935765 SRR5936131 SRR5936197 SRR5946920 SRR5946923 #> GCF_002234575.2          1          1          0          1          0 #> GCF_001314995.1          1          1          1          1          1 #> GCF_000154205.1          1          1          1          1          1 #> GCF_000012825.1          1          1          1          1          1 #> GCF_002222615.2          1          1          1          1          1 #> GCF_000466485.1          1          1          0          1          0 #>                 SRR5947006 #> GCF_002234575.2          1 #> GCF_001314995.1          1 #> GCF_000154205.1          1 #> GCF_000012825.1          1 #> GCF_002222615.2          0 #> GCF_000466485.1          1 head(from_upset_df_to_intersections(gut_gather_upset_df)) #>                                                                      intersection #> GCF_002234575.2                   SRR5935765_SRR5936131_0_SRR5946920_0_SRR5947006 #> GCF_001314995.1 SRR5935765_SRR5936131_SRR5936197_SRR5946920_SRR5946923_SRR5947006 #> GCF_000154205.1 SRR5935765_SRR5936131_SRR5936197_SRR5946920_SRR5946923_SRR5947006 #> GCF_000012825.1 SRR5935765_SRR5936131_SRR5936197_SRR5946920_SRR5946923_SRR5947006 #> GCF_002222615.2          SRR5935765_SRR5936131_SRR5936197_SRR5946920_SRR5946923_0 #> GCF_000466485.1                   SRR5935765_SRR5936131_0_SRR5946920_0_SRR5947006 from_upset_df_to_intersections(gut_gather_upset_df) %>%   dplyr::arrange(intersection) %>%   head() #>                         intersection #> GCA_000437275.1 0_0_0_0_0_SRR5947006 #> GCF_001404675.1 0_0_0_0_0_SRR5947006 #> GCF_002265625.1 0_0_0_0_0_SRR5947006 #> GCA_900555925.1 0_0_0_0_0_SRR5947006 #> GCA_900540595.1 0_0_0_0_0_SRR5947006 #> GCA_900542935.1 0_0_0_0_0_SRR5947006 head(from_upset_df_to_intersection_summary(gut_gather_upset_df)) #> # A tibble: 6 × 2 #>   intersection                                                          n #>   <chr>                                                             <int> #> 1 0_0_0_0_SRR5946923_0                                                 47 #> 2 0_SRR5936131_0_0_0_0                                                 38 #> 3 0_0_0_0_0_SRR5947006                                                 36 #> 4 0_0_SRR5936197_0_SRR5946923_0                                        30 #> 5 SRR5935765_SRR5936131_SRR5936197_SRR5946920_SRR5946923_SRR5947006    25 #> 6 0_0_0_SRR5946920_0_0                                                 23 intersection_members <- from_upset_df_to_intersection_members(gut_gather_upset_df) intersection_members$SRR5935765_SRR5936131_SRR5936197_SRR5946920_SRR5946923_SRR5947006 #>  [1] \"GCF_001314995.1\" \"GCF_000154205.1\" \"GCF_000012825.1\" \"GCF_000239295.1\" #>  [5] \"GCF_000484655.1\" \"GCA_900557355.1\" \"GCF_000210075.1\" \"GCA_900755095.1\" #>  [9] \"GCF_014334015.1\" \"GCF_016908695.1\" \"GCF_005121165.2\" \"GCA_900760795.1\" #> [13] \"GCF_009696065.1\" \"GCF_900106755.1\" \"GCF_013009555.1\" \"GCA_900761785.1\" #> [17] \"GCA_902362375.1\" \"GCA_001915545.1\" \"GCF_009193295.2\" \"GCA_900758315.1\" #> [21] \"GCF_003324185.1\" \"GCA_003573975.1\" \"GCA_003112755.1\" \"GCA_003584705.1\" #> [25] \"GCA_900762515.1\""},{"path":[]},{"path":"https://arcadia-science.github.io/sourmashconsumr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Taylor Reiter. Author, maintainer.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reiter T (2023). sourmashconsumr: Working Outputs Sourmash R. R package version 0.1.0, https://arcadia-science.github.io/sourmashconsumr/.","code":"@Manual{,   title = {sourmashconsumr: Working with the Outputs of Sourmash in R},   author = {Taylor Reiter},   year = {2023},   note = {R package version 0.1.0},   url = {https://arcadia-science.github.io/sourmashconsumr/}, }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":null,"dir":"","previous_headings":"","what":"Developer documentation","title":"Developer documentation","text":"sourmashconsumr package follows package developer conventions laid https://r-pkgs.org/. uses GitHub repository, software R RStudio, R packages devtools, testthat, usethis development. packages DESCRIPTION file dependencies.","code":""},{"path":[]},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"obtaining-the-source-code","dir":"","previous_headings":"Obtaining the sourmashconsumr source code and installing package and development dependencies","what":"Obtaining the source code","title":"Developer documentation","text":"Developers members Arcadia-Science organization: fork repo GitHub user account. Clone repository locally. Developers members Arcadia-Science organization: clone repository create branch. Clone repository locally using git clone. See contributing section instructions contribute code changes back sourmashconsumr repository.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"installing-r-and-rstudio","dir":"","previous_headings":"Obtaining the sourmashconsumr source code and installing package and development dependencies","what":"Installing R and RStudio","title":"Developer documentation","text":"Make sure R RStudio installed (see operating-system specific instructions).","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"opening-the-sourmashconsumr-r-project","dir":"","previous_headings":"Obtaining the sourmashconsumr source code and installing package and development dependencies","what":"Opening the sourmashconsumr R project","title":"Developer documentation","text":"’ll need open R project sourmashconsumr project. can double clicking sourmashconsumr.Rproj file file finder using File -> Open Project... finding opening sourmashconsumr.Rproj file.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"installing-development-dependencies","dir":"","previous_headings":"Obtaining the sourmashconsumr source code and installing package and development dependencies","what":"Installing development dependencies","title":"Developer documentation","text":"start developing package, ’ll need install devtools, testthat, usethis. can use following R command install packages: able run functions, run tests, also need install package dependencies. See instructions options install dependencies.","code":"install.packages(c(\"devtools\", \"testthat\", \"usethis\"))"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"installing-the-package-dependencies","dir":"","previous_headings":"Obtaining the sourmashconsumr source code and installing package and development dependencies","what":"Installing the package dependencies","title":"Developer documentation","text":"sourmashconsumr package lot dependencies tries make outputs sourmash python package interoperable biological computing packages already R ecosystem. can install dependencies however like; ’re documented DESCRIPTION file root repository. describe different strategies installing dependencies.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"installing-package-dependencies-using-r-functions","dir":"","previous_headings":"Obtaining the sourmashconsumr source code and installing package and development dependencies > Installing the package dependencies","what":"Installing package dependencies using R functions","title":"Developer documentation","text":"Installing sourmashconsumr package GitHub trigger missing dependencies installed. package dependencies available Bioconductor (namely phyloseq), installation dependencies fails install_github, may success using BiocManager:","code":"install.packages(\"devtools\") devtools::install_github(\"Arcadia-Science/sourmashconsumr\") if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"Arcadia-Science/sourmashconsumr\")"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"managing-the-development-environment-with-conda","dir":"","previous_headings":"Obtaining the sourmashconsumr source code and installing package and development dependencies > Installing the package dependencies","what":"Managing the development environment with conda","title":"Developer documentation","text":"methods fail, conda can used install dependencies. can find operating system-specific instructions installing miniconda . conda mamba installed, can create environment sourmashconsumr dependencies developer packages installed using following bash command: , activate environment: still need install RStudio creating conda environment. , ’re using Mac, can open sourmashconsumr Rproject running open sourmashconsumr.Rproj activated environment just created. Linux Windows machine, running rstudio activated conda environment may open RStudio (untested).","code":"mamba env create -n sourmashconsumr --file devenv.yml conda activate sourmashconsumr open sourmashconsumr.Rproj rstudio"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"developing","dir":"","previous_headings":"","what":"Developing","title":"Developer documentation","text":"sourmashconsumr developed GitHub Arcadia-Science/sourmashconsumr. Changes can contributed sourmashconsumr via pull requests.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"getting-started","dir":"","previous_headings":"Developing","what":"Getting started","title":"Developer documentation","text":"start developing, open sourmashconsumr.Rproj RStudio (see ). , load devtools package use devtools::load_all() function load sourmashconsumr. can open file want change make changes. Core package functions can found R folder. Functions grouped action (e.g. read_sourmash_outputs.R contains read_*() functions) data type (e.g. functions involve plotting output sourmash taxonomy annotate plot_taxonomy_annotate.R file). Tests test files located tests/testthat folder.","code":"library(devtools) load_all()"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"tests","dir":"","previous_headings":"Developing","what":"Tests","title":"Developer documentation","text":"sourmashconsumr package uses unit tests make sure code changes don’t break existing functions. run tests, can use testthat::test() function: Alternatively, can run tests related active file:","code":"test() test_active_file()"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"documentation","dir":"","previous_headings":"Developing","what":"Documentation","title":"Developer documentation","text":"Documentation coordinated roxygen devtools::document() function. documentation function contained roxygen blocks (#') function. blocks automatically parsed document() function produce files man/* directory. Therefore, files man/* directory manually edited. exception packages listed DESCRIPTION file. packages added DESCRIPTION file using usethis::use_package() function.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"vignette","dir":"","previous_headings":"Developing","what":"Vignette","title":"Developer documentation","text":"vignette html file built Rmd file vignettes/sourmashconsumr.Rmd. vignette can built using following command: html file pushed GitHub.","code":"devtools::build_rmd(\"vignettes/sourmashconsumr.Rmd\")"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"github-readme","dir":"","previous_headings":"Developing","what":"GitHub README","title":"Developer documentation","text":"README.md created README.Rmd file. edit README.md file, make changes README.Rmd file knit .","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"pkgdown-package-documentation-site","dir":"","previous_headings":"Developing","what":"pkgdown package documentation site","title":"Developer documentation","text":"sourmashconsumr uses pkgdown build sourmashconsumr documentation. build package documentation site locally, can use: shouldn’t next part, set GitHub Actions site automatically built, used following code:","code":"usethis::use_pkgdown() pkgdown::build_site() # set up git credentials usethis::gh_token_help() usethis::create_github_token() gitcreds::gitcreds_set() # use gh-pages and github actions to build site usethis::use_pkgdown_github_pages()"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"checking-all-the-things","dir":"","previous_headings":"Developing","what":"Checking all the things","title":"Developer documentation","text":"making changes, run devtools::check() locally make sure tests pass, documentation updated, failures warning local build process.","code":"check()"},{"path":"https://arcadia-science.github.io/sourmashconsumr/devdoc.html","id":"contributing-changes-back-to-the-sourmashconsumr-repository","dir":"","previous_headings":"","what":"Contributing changes back to the sourmashconsumr repository","title":"Developer documentation","text":"Contributions can made sourmashconsumr package using pull requests. required, may want open issue first discuss proposed changes. Pull requests opened main branch. open pull request branch fork, GitHub Actions automatically launch continuous integration checks make sure proposed changes pass R-CMD check across different operating systems (Mac, Windows, Linux). checks must pass new code merged main branch. CI actions also calculate changes code coverage, much code base covered tests. exported functions corresponding test.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/index.html","id":"sourmashconsumr","dir":"","previous_headings":"","what":"Working with the Outputs of Sourmash in R","title":"Working with the Outputs of Sourmash in R","text":"goal sourmashconsumr parse, analyze, visualize outputs sourmash python package. sourmashconsumr package still active development.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Working with the Outputs of Sourmash in R","text":"can install development version sourmashconsumr GitHub : Eventually, hope release sourmashconsumr CRAN provide conda-forge package. ’ll update instructions ’ve done .","code":"# install.packages(\"remotes\") remotes::install_github(\"Arcadia-Science/sourmashconsumr\")"},{"path":"https://arcadia-science.github.io/sourmashconsumr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Working with the Outputs of Sourmash in R","text":"See vignette full instructions run sourmashconsumr package (coming soon!). access functions sourmashconsumr package, can load : sourmashconsumr package contains variety functions work outputs sourmash python package. read* functions read parse outputs sourmash data frames. plot* functions visualize sourmash outputs. from_*to_* functions convert sourmash data frames formats popular R packages (e.g. phyloseq). sourmashconsumr also contains utility functions work datatypes (time, mostly upset data frames). See complete list functions , sorted sourmash output function operates : read_signature() upset plots: from_signatures_to_upset_df(), plot_signatures_upset() rarefaction plots signatures sketched reads: from_signatures_to_rarefaction_df(), plot_signatures_rarefaction() read_compare() MDS plot: make_compare_mds(), plot_compare_mds() heatmap: plot_compare_heatmap() read_taxonomy_annotate() taxonomy agglomeration: tax_glom_taxonomy_annotate() upset plot: from_taxonomy_annotate_to_upset_inputs(), plot_taxonomy_annotate_upset() sankey plot: plot_taxonomy_annotate_sankey() time series alluvial plot: plot_taxonomy_annotate_ts_alluvial() detect presence multiple strains single species metagenome: from_taxonomy_annotate_to_multi_strains() metacoder: from_taxonomy_annotate_to_metacoder() phyloseq: from_taxonomy_annotate_to_phyloseq() read_gather() barchart: plot_gather_classified() upset plot: from_gather_to_upset_df(), plot_gather_upset() from_list_to_upset_df() from_upset_df_to_intersection_members() from_upset_df_to_intersection_summary() from_upset_df_to_intersections()","code":"library(sourmashconsumr)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/index.html","id":"developer-documentation","dir":"","previous_headings":"","what":"Developer documentation","title":"Working with the Outputs of Sourmash in R","text":"sourmashconsumr package follows package developer conventions laid https://r-pkgs.org/, changes can contributed code base using pull requests. information contribute, see developer documentation.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Working with the Outputs of Sourmash in R","text":"sourmashconsumr doesn’t citation yet, sourmash ! use sourmash work, please cite: Brown Irber (2016), doi:10.21105/joss.00027. ’d like information sourmash works, please see following publications: general background sourmash works examples use : Large-scale sequence comparisons sourmash mathematical description FracMinHash demonstration accuracy sourmash gather: Lightweight compositional analysis metagenomes FracMinHash minimum metagenome covers","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_and_edit_names_in_signatures_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for missing name, NAs in name, or empty name in a data frame of signatures — check_and_edit_names_in_signatures_df","title":"Check for missing name, NAs in name, or empty name in a data frame of signatures — check_and_edit_names_in_signatures_df","text":"Check missing name, NAs name, empty name data frame signatures","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_and_edit_names_in_signatures_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for missing name, NAs in name, or empty name in a data frame of signatures — check_and_edit_names_in_signatures_df","text":"","code":"check_and_edit_names_in_signatures_df(signatures_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_and_edit_names_in_signatures_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for missing name, NAs in name, or empty name in a data frame of signatures — check_and_edit_names_in_signatures_df","text":"signatures_df data frame representing many signatures.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_and_edit_names_in_signatures_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for missing name, NAs in name, or empty name in a data frame of signatures — check_and_edit_names_in_signatures_df","text":"signatures_df compliant names","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_compare_df_sample_col_and_move_to_rowname.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to check if the sample name is a column or a rowname and move it to a rowname if it is a column. — check_compare_df_sample_col_and_move_to_rowname","title":"Internal function to check if the sample name is a column or a rowname and move it to a rowname if it is a column. — check_compare_df_sample_col_and_move_to_rowname","text":"Internal function check sample name column rowname move rowname column.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_compare_df_sample_col_and_move_to_rowname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to check if the sample name is a column or a rowname and move it to a rowname if it is a column. — check_compare_df_sample_col_and_move_to_rowname","text":"","code":"check_compare_df_sample_col_and_move_to_rowname(compare_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_compare_df_sample_col_and_move_to_rowname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to check if the sample name is a column or a rowname and move it to a rowname if it is a column. — check_compare_df_sample_col_and_move_to_rowname","text":"compare_df data frame produced read_compare_csv().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_compare_df_sample_col_and_move_to_rowname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to check if the sample name is a column or a rowname and move it to a rowname if it is a column. — check_compare_df_sample_col_and_move_to_rowname","text":"data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_file_and_url_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if local file path or URL are valid — check_file_and_url_one","title":"Check if local file path or URL are valid — check_file_and_url_one","text":"Check local file path URL valid","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_file_and_url_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if local file path or URL are valid — check_file_and_url_one","text":"","code":"check_file_and_url_one(file)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_file_and_url_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if local file path or URL are valid — check_file_and_url_one","text":"file File path URL","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_uniform_parameters_in_signatures_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check uniformity in sketch parameters — check_uniform_parameters_in_signatures_df","title":"Check uniformity in sketch parameters — check_uniform_parameters_in_signatures_df","text":"Check uniformity sketch parameters","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_uniform_parameters_in_signatures_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check uniformity in sketch parameters — check_uniform_parameters_in_signatures_df","text":"","code":"check_uniform_parameters_in_signatures_df(signatures_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_uniform_parameters_in_signatures_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check uniformity in sketch parameters — check_uniform_parameters_in_signatures_df","text":"signatures_df data frame representing many signatures.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/check_uniform_parameters_in_signatures_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check uniformity in sketch parameters — check_uniform_parameters_in_signatures_df","text":"NULL. Stops execution parameters uniform.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_gather_to_upset_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data frame containing sourmash gather results into a upset plot compatible data frame — from_gather_to_upset_df","title":"Convert a data frame containing sourmash gather results into a upset plot compatible data frame — from_gather_to_upset_df","text":"`from_gather_to_upset_df()` converts data frame like produced `read_gather()` named list vectors. vector list named query_name column input data frame contains genome accessions found sample. `query_name` column used sample names. returned data frame genome accessions row names query_names column names can plotted `UpSetR::upset()` `ComplexUpset::upset()`. plotting Complex Upset, additional metadata can added data frame (therefore plot) joining values genome_accession rownames.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_gather_to_upset_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data frame containing sourmash gather results into a upset plot compatible data frame — from_gather_to_upset_df","text":"","code":"from_gather_to_upset_df(gather_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_gather_to_upset_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data frame containing sourmash gather results into a upset plot compatible data frame — from_gather_to_upset_df","text":"gather_df data frame multiple sourmash gather results created `read_gather()`.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_gather_to_upset_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data frame containing sourmash gather results into a upset plot compatible data frame — from_gather_to_upset_df","text":"upset plot compliant data frame","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_gather_to_upset_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data frame containing sourmash gather results into a upset plot compatible data frame — from_gather_to_upset_df","text":"","code":"if (FALSE) { from_gather_to_upset_df(gather_df) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_list_to_upset_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of vectors into an upset plot-compatible data.frame while conserving value names as row.names — from_list_to_upset_df","title":"Convert a list of vectors into an upset plot-compatible data.frame while conserving value names as row.names — from_list_to_upset_df","text":"`from_list_to_upset_df()` copies functionality UpSetR::fromList() converts list named vectors upset plot compatible data frame. modifies original function return data frame row names record identity items vector. allows additional metadata joined resultant data frame using values items list.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_list_to_upset_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of vectors into an upset plot-compatible data.frame while conserving value names as row.names — from_list_to_upset_df","text":"","code":"from_list_to_upset_df(upset_list)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_list_to_upset_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of vectors into an upset plot-compatible data.frame while conserving value names as row.names — from_list_to_upset_df","text":"upset_list named list vectors. name one set vector contain values intersected.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_list_to_upset_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of vectors into an upset plot-compatible data.frame while conserving value names as row.names — from_list_to_upset_df","text":"data.frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_list_to_upset_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of vectors into an upset plot-compatible data.frame while conserving value names as row.names — from_list_to_upset_df","text":"","code":"sample1 <- c(\"a\", \"b\", \"c\") sample2 <- c(\"b\", \"c\", \"d\") upset_list <- list(sample1 = sample1, sample2 = sample2) from_list_to_upset_df(upset_list) #>   sample1 sample2 #> a       1       0 #> b       1       1 #> c       1       1 #> d       0       1"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_rarefaction_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tidy data.frame representing per-sample rarefaction information — from_signatures_to_rarefaction_df","title":"Create a tidy data.frame representing per-sample rarefaction information — from_signatures_to_rarefaction_df","text":"`from_signatures_to_rarefaction_df()` rarefies sourmash signatures sample assess sequencing depth. output tidy data frame can used ggplot2 plots. uses `vegan::rarecurve()` calculate rarefaction curve sample input sourmash signatures data frame. `name` column used sample names. column exist blank, sample names derived using base name filename. individual name blank (\"\") NA, individual name derived using base name filename. rarefaction curves evaluated using interval step sample sizes, always including 1 total sample size. function intended used signatures built read data. uses abundance information part rarefaction curve calculation. case signatures built reads k-mer trimmed, filtering step removes minhashes observed one sample abundance 1 likely sequencing errors. filtering process may invalidate downstream rarefaction curve convergence estimation, many methods evaluate singletons doubletons data set.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_rarefaction_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tidy data.frame representing per-sample rarefaction information — from_signatures_to_rarefaction_df","text":"","code":"from_signatures_to_rarefaction_df(signatures_df, step = 1)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_rarefaction_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tidy data.frame representing per-sample rarefaction information — from_signatures_to_rarefaction_df","text":"signatures_df data frame multiple sourmash signatures created combining many signatures read read_signature(). data frame must contain `abundances` column (generated using `abund` parameter `sourmash sketch`). step Integer. step size samples rarefaction curve calculation.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_rarefaction_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tidy data.frame representing per-sample rarefaction information — from_signatures_to_rarefaction_df","text":"tidy data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_rarefaction_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tidy data.frame representing per-sample rarefaction information — from_signatures_to_rarefaction_df","text":"","code":"if (FALSE) { from_signatures_to_rarefaction_df() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_upset_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.frame containing hashes from many sourmash signatures into a upset plot compatible data.frame — from_signatures_to_upset_df","title":"Convert a data.frame containing hashes from many sourmash signatures into a upset plot compatible data.frame — from_signatures_to_upset_df","text":"`from_signatures_to_upset_df()` converts data frame like produced binding many data.frames read `read_signature()` named list vectors. vector list named name column input signatures data frame contains minhashes (mins) sample. `name` column used sample names. column exist, sample names derived using base name filename. individual name blank (\"\") NA, individual name derived using base name filename. input data frame must contain one value `ksize`, `scaled`/`num`, `hash_function`, `molecule`, `seed` signatures calculated different values parameters comparable. returned data frame minhashes row names shortened filenames column names can plotted `UpSetR::upset()` `ComplexUpset::upset()`. plotting Complex Upset, additional metadata can added data frame (therefore plot) joining values minhash rownames.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_upset_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.frame containing hashes from many sourmash signatures into a upset plot compatible data.frame — from_signatures_to_upset_df","text":"","code":"from_signatures_to_upset_df(signatures_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_upset_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.frame containing hashes from many sourmash signatures into a upset plot compatible data.frame — from_signatures_to_upset_df","text":"signatures_df data frame multiple sourmash signatures created combining many signatures read `read_signature()`.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_upset_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.frame containing hashes from many sourmash signatures into a upset plot compatible data.frame — from_signatures_to_upset_df","text":"upset plot compliant data frame","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_signatures_to_upset_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data.frame containing hashes from many sourmash signatures into a upset plot compatible data.frame — from_signatures_to_upset_df","text":"","code":"if (FALSE) { from_signatures_to_upset_df() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_count_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the output of sourmash taxonomy annotate into a phyloseq OTU table (count table) — from_taxonomy_annotate_to_count_table","title":"Transform the output of sourmash taxonomy annotate into a phyloseq OTU table (count table) — from_taxonomy_annotate_to_count_table","text":"Transform output sourmash taxonomy annotate phyloseq OTU table (count table)","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_count_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the output of sourmash taxonomy annotate into a phyloseq OTU table (count table) — from_taxonomy_annotate_to_count_table","text":"","code":"from_taxonomy_annotate_to_count_table(taxonomy_annotate_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_count_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the output of sourmash taxonomy annotate into a phyloseq OTU table (count table) — from_taxonomy_annotate_to_count_table","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_count_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the output of sourmash taxonomy annotate into a phyloseq OTU table (count table) — from_taxonomy_annotate_to_count_table","text":"phyloseq otu_table object","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_count_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform the output of sourmash taxonomy annotate into a phyloseq OTU table (count table) — from_taxonomy_annotate_to_count_table","text":"","code":"if (FALSE) { from_taxonomy_annotate_to_count_table(taxonomy_annotate_df) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_metacoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the output of sourmash taxonomy annotate into a taxmap metacoder object — from_taxonomy_annotate_to_metacoder","title":"Transform the output of sourmash taxonomy annotate into a taxmap metacoder object — from_taxonomy_annotate_to_metacoder","text":"Transform output sourmash taxonomy annotate taxmap metacoder object","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_metacoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the output of sourmash taxonomy annotate into a taxmap metacoder object — from_taxonomy_annotate_to_metacoder","text":"","code":"from_taxonomy_annotate_to_metacoder(   taxonomy_annotate_df = NULL,   file = NULL,   intersect_bp_threshold = 50000,   tax_glom_level = NULL,   groups = NULL,   groups_prefix = \"x\",   class_key = NULL,   class_regex = NULL )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_metacoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the output of sourmash taxonomy annotate into a taxmap metacoder object — from_taxonomy_annotate_to_metacoder","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate. specified, file ignored. Can contain results one many runs sourmash taxonomy annotate. file Path CSV file files output sourmash taxonomy annotate. intersect_bp_threshold Integer. Gather matches must intersect_bp greater equal value. tax_glom_level Character. NULL default, meaning agglomeration done. Valid options \"domain\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\". valid option supplied, k-mer counts agglomerated level metacoder object created. groups data frame distinct query_name values taxonomy_annotate_df first column query groups second column. groups_prefix Character. Ignored groups defined. Used prefix query_name values metacoder function calc_n_samples(). class_key Character. class_key use build metacoder object. See metacoder documentation information. Ignored used pre-built sourmash GenBank GTDB databases running sourmash. class_regex Character. class_regex use build metacoder object. See metacoder documentation information. Ignored used pre-built sourmash GenBank GTDB databases running sourmash.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_metacoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the output of sourmash taxonomy annotate into a taxmap metacoder object — from_taxonomy_annotate_to_metacoder","text":"metacoder taxmap object.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_metacoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform the output of sourmash taxonomy annotate into a taxmap metacoder object — from_taxonomy_annotate_to_metacoder","text":"","code":"if (FALSE) { from_taxonomy_annotate_to_metacoder() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_multi_strains.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether multiple strains of the same species are present in a sample. — from_taxonomy_annotate_to_multi_strains","title":"Detect whether multiple strains of the same species are present in a sample. — from_taxonomy_annotate_to_multi_strains","text":"`from_taxonomy_annotate_to_multi_strains()` uses output sourmash taxonomy annotate detect whether multiple strains species present sample (e.g. metagenome). function uses `f_match` metric produced sourmash gather predict multiple strains present. `f_match` fraction matched genome contained within query sample. function sums `f_match` values matched genomes given species detects see genomic segments expect see one strain truly present. frequently, multiple genomes form one species identified sourmash gather, single genome query sample different genomes databases multiple genomes cover distinct portion genome truly present returned matches. However, species, fraction single genome matched query decreases successive match. consistent idea pangenomes -- single true genome query matches many different parts genomes database. happens, sum fraction matched (`f_match`) genomes within species within single query exceed ~1. run sourmash gather single genomes, real value observe sum f_match ranged : 0.046 (genomes ~genus-level relatives database) 1.04 (genomes many close matches database). feel reasonably confident good starting place strain-level analysis (see details caveats) additional validated methods used confirm findings.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_multi_strains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether multiple strains of the same species are present in a sample. — from_taxonomy_annotate_to_multi_strains","text":"","code":"from_taxonomy_annotate_to_multi_strains(   taxonomy_annotate_df,   plot_threshold = 0.02 )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_multi_strains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect whether multiple strains of the same species are present in a sample. — from_taxonomy_annotate_to_multi_strains","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate. Can contain results one many runs sourmash taxonomy annotate. plot_threshold f_match threshold plotting genome match. threshold plotting .","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_multi_strains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether multiple strains of the same species are present in a sample. — from_taxonomy_annotate_to_multi_strains","text":"named list. first object list `candidate_species_with_multiple_strains` summarizes query sample species names may f_match >= 1.1. second object `plt` ggplot object summarizes query samples species may contain multiple strains. third object `plt_data` contains data used produce ggplot object.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_multi_strains.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect whether multiple strains of the same species are present in a sample. — from_taxonomy_annotate_to_multi_strains","text":"context, refer _strain_ sub-species level variation. function uses genomes unit strain -- genome considered different strain. Sourmash gather compares query (e.g. metagenome) database (GenBank microbial genomes) provides minimum set genomes cover k-mers query database. least two things happening sourmash gather returns two genomes species (e.g. different strains) match metagenome sample: 1. strains may present metagenome 2. one strain may truly present metagenome, strain contained within current reference database. Instead, pieces strain's genome genomes database. genome database contains largest overlap genome metagenome returned first best match. , genomes database returned match portions metagenome strain's genome contained best match. reality, combination two things probably happens. Keep mind: 1. detect strain variation one genome given species database using sourmash gather/taxonomy alone (variant calling tools tools look variation assembly graphs successful use case). 2. sourmash gather/taxonomy results alone used conclusively detect strain variation, good place start figure dig deeper.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_multi_strains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect whether multiple strains of the same species are present in a sample. — from_taxonomy_annotate_to_multi_strains","text":"","code":"if (FALSE) { from_taxonomy_annotate_to_multi_strains() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the output of sourmash taxonomy annotate into a phyloseq object — from_taxonomy_annotate_to_phyloseq","title":"Transform the output of sourmash taxonomy annotate into a phyloseq object — from_taxonomy_annotate_to_phyloseq","text":"`from_taxonomy_annotate_to_phyloseq()` transforms data frame contains sourmash taxonomy annotate results phyloseq object. Counts derived `n_unique_kmers` column, abundance-weighted number unique k-mers overlapping query match database.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_phyloseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the output of sourmash taxonomy annotate into a phyloseq object — from_taxonomy_annotate_to_phyloseq","text":"","code":"from_taxonomy_annotate_to_phyloseq(taxonomy_annotate_df, metadata_df = NULL)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the output of sourmash taxonomy annotate into a phyloseq object — from_taxonomy_annotate_to_phyloseq","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate. metadata_df Optional. data frame metadata. row names must match values `query_names` `taxonomy_annotate_df`. additional columns may added.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_phyloseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the output of sourmash taxonomy annotate into a phyloseq object — from_taxonomy_annotate_to_phyloseq","text":"phyloseq object.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_phyloseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform the output of sourmash taxonomy annotate into a phyloseq object — from_taxonomy_annotate_to_phyloseq","text":"","code":"if (FALSE) { from_taxonomy_annotate_to_phyloseq(taxonomy_annotate_df) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_tax_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the output of sourmash taxonomy annotate into a phyloseq tax table — from_taxonomy_annotate_to_tax_table","title":"Transform the output of sourmash taxonomy annotate into a phyloseq tax table — from_taxonomy_annotate_to_tax_table","text":"Transform output sourmash taxonomy annotate phyloseq tax table","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_tax_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the output of sourmash taxonomy annotate into a phyloseq tax table — from_taxonomy_annotate_to_tax_table","text":"","code":"from_taxonomy_annotate_to_tax_table(taxonomy_annotate_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_tax_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the output of sourmash taxonomy annotate into a phyloseq tax table — from_taxonomy_annotate_to_tax_table","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_tax_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the output of sourmash taxonomy annotate into a phyloseq tax table — from_taxonomy_annotate_to_tax_table","text":"phyloseq tax_table object.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_tax_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform the output of sourmash taxonomy annotate into a phyloseq tax table — from_taxonomy_annotate_to_tax_table","text":"","code":"if (FALSE) { from_taxonomy_annotate_to_tax_table(taxonomy_annotate_df) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_upset_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a taxonomy annotate data frame into an upset plot compliant data frame — from_taxonomy_annotate_to_upset_inputs","title":"Transform a taxonomy annotate data frame into an upset plot compliant data frame — from_taxonomy_annotate_to_upset_inputs","text":"`from_taxonomy_annotate_to_upset_inputs()` transforms data frame produced using read_taxonomy_annotate many results produced sourmash taxonomy annotate upset-compliant data frame. function can optionally agglomerate different levels taxonomic rank (e.g. phylum) produce upset compliant data frame agglomeration.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_upset_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a taxonomy annotate data frame into an upset plot compliant data frame — from_taxonomy_annotate_to_upset_inputs","text":"","code":"from_taxonomy_annotate_to_upset_inputs(   taxonomy_annotate_df,   tax_glom_level = NULL )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_upset_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a taxonomy annotate data frame into an upset plot compliant data frame — from_taxonomy_annotate_to_upset_inputs","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate. Can contain results one many runs sourmash taxonomy annotate. Agglomeration occurs within query. tax_glom_level Optional character string specifying taxonomic rank agglomerate k-mer counts. Must one \"domain\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species.\"","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_upset_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a taxonomy annotate data frame into an upset plot compliant data frame — from_taxonomy_annotate_to_upset_inputs","text":"list. first object list upset compliant data frame. second taxonomy_annotate_df used build upset data frame. last tax_glom_level.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_taxonomy_annotate_to_upset_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a taxonomy annotate data frame into an upset plot compliant data frame — from_taxonomy_annotate_to_upset_inputs","text":"","code":"if (FALSE) { from_taxonomy_annotate_to_upset_inputs() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_members.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the lineages that underlie the intersections in an upset plot — from_upset_df_to_intersection_members","title":"Extract the lineages that underlie the intersections in an upset plot — from_upset_df_to_intersection_members","text":"`from_upset_df_to_intersection_members()` produces named list item list vector items make intersection. names item list concatenations sample names (built `colnames(upset_df)`). sample name occurs name, members vectors observed sample name. Zeroes (`0`) used place holders samples given member.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_members.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the lineages that underlie the intersections in an upset plot — from_upset_df_to_intersection_members","text":"","code":"from_upset_df_to_intersection_members(upset_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_members.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the lineages that underlie the intersections in an upset plot — from_upset_df_to_intersection_members","text":"upset_df upset compliant data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_members.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the lineages that underlie the intersections in an upset plot — from_upset_df_to_intersection_members","text":"list.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_members.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the lineages that underlie the intersections in an upset plot — from_upset_df_to_intersection_members","text":"","code":"sample1 <- c(\"a\", \"b\", \"c\") sample2 <- c(\"b\", \"c\", \"d\") upset_list <- list(sample1 = sample1, sample2 = sample2) upset_df <- from_list_to_upset_df(upset_list) lst <- from_upset_df_to_intersection_members(upset_df) # to pull out values from the list, index into the list using any of the intersection names. lst[[\"sample1_sample2\"]] # identity of values shared by sample1 and sample2 #> [1] \"b\" \"c\" lst[\"sample1_0\"] # identity of values that occurred in only sample1 #> $sample1_0 #> [1] \"a\" #>"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the size of intersections between samples in an upset compliant data frame — from_upset_df_to_intersection_summary","title":"Summarize the size of intersections between samples in an upset compliant data frame — from_upset_df_to_intersection_summary","text":"`from_upset_df_to_intersection_summary()` reports information upset plots data frame. reports intersection identity number elements shared intersections.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the size of intersections between samples in an upset compliant data frame — from_upset_df_to_intersection_summary","text":"","code":"from_upset_df_to_intersection_summary(upset_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the size of intersections between samples in an upset compliant data frame — from_upset_df_to_intersection_summary","text":"upset_df upset compliant data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the size of intersections between samples in an upset compliant data frame — from_upset_df_to_intersection_summary","text":"data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersection_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the size of intersections between samples in an upset compliant data frame — from_upset_df_to_intersection_summary","text":"","code":"sample1 <- c(\"a\", \"b\", \"c\") sample2 <- c(\"b\", \"c\", \"d\") upset_list <- list(sample1 = sample1, sample2 = sample2) upset_df <- from_list_to_upset_df(upset_list) from_upset_df_to_intersection_summary(upset_df) #> # A tibble: 3 × 2 #>   intersection        n #>   <chr>           <int> #> 1 sample1_sample2     2 #> 2 0_sample2           1 #> 3 sample1_0           1"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersections.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform an upset compliant data frame into a data frame of intersection names and lineages — from_upset_df_to_intersections","title":"Transform an upset compliant data frame into a data frame of intersection names and lineages — from_upset_df_to_intersections","text":"`from_upset_df_to_intersections()` transforms upset compliant data frame data frame details intersections shared samples upset data frame. produces data frame column named `intersection`. intersection shared set samples, column names occur character string `intersection` column. sample column names appear 0s. identity intersection recorded row names.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform an upset compliant data frame into a data frame of intersection names and lineages — from_upset_df_to_intersections","text":"","code":"from_upset_df_to_intersections(upset_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform an upset compliant data frame into a data frame of intersection names and lineages — from_upset_df_to_intersections","text":"upset_df upset compliant data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform an upset compliant data frame into a data frame of intersection names and lineages — from_upset_df_to_intersections","text":"data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/from_upset_df_to_intersections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform an upset compliant data frame into a data frame of intersection names and lineages — from_upset_df_to_intersections","text":"","code":"sample1 <- c(\"a\", \"b\", \"c\") sample2 <- c(\"b\", \"c\", \"d\") upset_list <- list(sample1 = sample1, sample2 = sample2) upset_df <- from_list_to_upset_df(upset_list) from_upset_df_to_intersections(upset_df) #>      intersection #> a       sample1_0 #> b sample1_sample2 #> c sample1_sample2 #> d       0_sample2"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/get_scaled_for_max_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the scaled value for a signature from the max_hash value — get_scaled_for_max_hash","title":"Calculate the scaled value for a signature from the max_hash value — get_scaled_for_max_hash","text":"Calculate scaled value signature max_hash value","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/get_scaled_for_max_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the scaled value for a signature from the max_hash value — get_scaled_for_max_hash","text":"","code":"get_scaled_for_max_hash(sig_max_hash)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/get_scaled_for_max_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the scaled value for a signature from the max_hash value — get_scaled_for_max_hash","text":"sig_max_hash Max hash value signature.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/get_scaled_for_max_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the scaled value for a signature from the max_hash value — get_scaled_for_max_hash","text":"Integer; scaled value","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_compare_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Gut microbiome sourmash compare data frame — gut_compare_df","title":"Gut microbiome sourmash compare data frame — gut_compare_df","text":"similarity matrix six stool microbiome shotgun metagenome samples.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_compare_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gut microbiome sourmash compare data frame — gut_compare_df","text":"","code":"gut_compare_df"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_compare_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gut microbiome sourmash compare data frame — gut_compare_df","text":"## `gut_compare_df` data frame 6 rows 7 columns: sample Sample name SRR5935765, SRR5936131, SRR5936197, SRR5946920, SRR5946923, SRR5947006 Sequence Read Archive run accessions. Aligned values specify similarity two samples.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_compare_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gut microbiome sourmash compare data frame — gut_compare_df","text":"<https://github.com/Arcadia-Science/sourmashconsumr/blob/main/data-raw/00_sourmash_commands.sh>","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_gather_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Gut microbiome sourmash gather data frame — gut_gather_df","title":"Gut microbiome sourmash gather data frame — gut_gather_df","text":"results running sourmash gather six stool microbiome metagenomes GTDB rs207 representatives database.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_gather_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gut microbiome sourmash gather data frame — gut_gather_df","text":"","code":"gut_gather_df"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_gather_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gut microbiome sourmash gather data frame — gut_gather_df","text":"## `gut_gather_df` data frame 1,062 rows 30 columns: intersect_bp Numeric. Estimated number intersected base pairs metagenome genome database. f_orig_query Numeric. Fraction original query belongs match. f_match Numeric. Fraction matched genome leftover query. f_unique_to_query Numeric. Fraction query uniquely belongs match. f_unique_weighted Numeric. Abundance-weighted fraction query uniquely belongs match. average_abund Numeric. Average abundance k-mers metagenome match. median_abund Numeric. Median abundance k-mers metagenome match. std_abund Numeric. Standard deviation abundance k-mers metagenome match. filename Character. File path database computer sourmash gather executed . name Character. Name matched genome sourmash gather database. genome_accession Character. Genome accession solved cutting name variable first space. md5 Character. MD5 hash matched genome sketch. f_match_orig Numeric. Fraction matched genome original query prior gather subtraction. unique_intersect_bp Numeric. Estimated number uniquely intersected base pairs metagenome genome database. gather_result_rank Numeric. Rank match gather results. remaining_bp Numeric. Remaining base pairs query match removed. query_filename Character. File name query derived query sketch. query_name Character. Name query. query_md5 Character. MD5 hash query. query_bp Character. Number base pairs query. ksize Character. K-mer size used sourmash gather. moltype Character. Molecule type used sourmash gather. scaled Numeric. Scaled value sourmash gather performed . query_n_hashes Numeric. Number hashes (k-mers) query. query_abundance Logical. Whether hash (k-mer) abundance information part query sketch. query_containment_ani Numeric. Containment query match. match_containment_ani Numeric. Containment match query. average_containment_ani Numeric. Average two containment metrics query_containment_ani match_containment_ani. max_containment_ani Numeric. Maximum containment two containment metrics query_containment_ani match_containment_ani. potential_false_negative Logical. Whether containment estimate potential false negative.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_gather_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gut microbiome sourmash gather data frame — gut_gather_df","text":"<https://github.com/Arcadia-Science/sourmashconsumr/blob/main/data-raw/00_sourmash_commands.sh>","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_signatures_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Gut microbiome sourmash signatures data frame — gut_signatures_df","title":"Gut microbiome sourmash signatures data frame — gut_signatures_df","text":"Sourmash sketches six stool microbiome shotgun metagenome samples parsed data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_signatures_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gut microbiome sourmash signatures data frame — gut_signatures_df","text":"","code":"gut_signatures_df"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_signatures_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gut microbiome sourmash signatures data frame — gut_signatures_df","text":"## `gut_signatures_df` data frame 15,339 rows 16 columns: class Character. Class sketch. email Character. Email recorded sketch. hash_function Character. Hash function used sketch. filename Character. Name file sketched. name Character. Name sketch. license Character. License sketch. num Integer. Number hashes specified sketch. ksize Integer. K-mer size represented sketch. seed Integer. Seed hash function. max_hash Numeric. Maximum hash. scaled Numeric. Scaled value sketch. mins Numeric. MinHash, hash, represents k-mer sketched sample. md5sum Character. MD5 hash sketch. abundances Integer. Abundance hash sample. molecule Character. Molecule type represented sketch. version Numeric. Sketch version.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_signatures_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gut microbiome sourmash signatures data frame — gut_signatures_df","text":"<https://github.com/Arcadia-Science/sourmashconsumr/blob/main/data-raw/00_sourmash_commands.sh>","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_taxonomy_annotate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Gut microbiome sourmash taxonomy annotate data frame — gut_taxonomy_annotate_df","title":"Gut microbiome sourmash taxonomy annotate data frame — gut_taxonomy_annotate_df","text":"results running sourmash gather six stool microbiome metagenomes GTDB rs207 representatives database assigning taxonomy using sourmash taxonomy annotate.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_taxonomy_annotate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gut microbiome sourmash taxonomy annotate data frame — gut_taxonomy_annotate_df","text":"","code":"gut_taxonomy_annotate_df"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_taxonomy_annotate_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gut microbiome sourmash taxonomy annotate data frame — gut_taxonomy_annotate_df","text":"## `gut_taxonomy_annotate_df` data frame 1,062 rows 40 columns: intersect_bp Numeric. Estimated number intersected base pairs metagenome genome database. f_orig_query Numeric. Fraction original query belongs match. f_match Numeric. Fraction matched genome leftover query. f_unique_to_query Numeric. Fraction query uniquely belongs match. f_unique_weighted Numeric. Abundance-weighted fraction query uniquely belongs match. average_abund Numeric. Average abundance k-mers metagenome match. median_abund Numeric. Median abundance k-mers metagenome match. std_abund Numeric. Standard deviation abundance k-mers metagenome match. filename Character. File path database computer sourmash gather executed . name Character. Name matched genome sourmash gather database. genome_accession Character. Genome accession solved cutting name variable first space. md5 Character. MD5 hash matched genome sketch. f_match_orig Numeric. Fraction matched genome original query prior gather subtraction. unique_intersect_bp Numeric. Estimated number uniquely intersected base pairs metagenome genome database. gather_result_rank Numeric. Rank match gather results. remaining_bp Numeric. Remaining base pairs query match removed. query_filename Character. File name query derived query sketch. query_name Character. Name query. query_md5 Character. MD5 hash query. query_bp Character. Number base pairs query. ksize Character. K-mer size used sourmash gather. moltype Character. Molecule type used sourmash gather. scaled Numeric. Scaled value sourmash gather performed . query_n_hashes Numeric. Number hashes (k-mers) query. query_abundance Logical. Whether hash (k-mer) abundance information part query sketch. query_containment_ani Numeric. Containment query match. match_containment_ani Numeric. Containment match query. average_containment_ani Numeric. Average two containment metrics query_containment_ani match_containment_ani. max_containment_ani Numeric. Maximum containment two containment metrics query_containment_ani match_containment_ani. potential_false_negative Logical. Whether containment estimate potential false negative. lineage Character. Full taxonomic lineage gather match. taxonomic level separated semicolon. domain Character. Domain taxonomic lineage. phylum Character. Phylum taxonomic lineage. class Character. Class taxonomic lineage. order Character. Order taxonomic lineage. family Character. Family taxonomic lineage. genus Character. Genus taxonomic lineage. species Character. Species taxonomic lineage. strain Character. Strain taxonomic lineage. n_unique_kmers Numeric. Abundance-weighted number unique k-mers attributable gather match.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/gut_taxonomy_annotate_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gut microbiome sourmash taxonomy annotate data frame — gut_taxonomy_annotate_df","text":"<https://github.com/Arcadia-Science/sourmashconsumr/blob/main/data-raw/00_sourmash_commands.sh>","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_agglom_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to define column names for taxonomy agglomeration — make_agglom_cols","title":"Helper function to define column names for taxonomy agglomeration — make_agglom_cols","text":"Helper function define column names taxonomy agglomeration","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_agglom_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to define column names for taxonomy agglomeration — make_agglom_cols","text":"","code":"make_agglom_cols(tax_glom_level, with_query_name = FALSE)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_agglom_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to define column names for taxonomy agglomeration — make_agglom_cols","text":"tax_glom_level Character. Valid options \"domain\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\". with_query_name Boolean indicating whether column name \"query_name\" included.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_agglom_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to define column names for taxonomy agglomeration — make_agglom_cols","text":"character vector column names used agglomeration","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_agglom_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to define column names for taxonomy agglomeration — make_agglom_cols","text":"","code":"make_agglom_cols(\"species\", with_query_name = FALSE) #> [1] \"domain\"  \"phylum\"  \"class\"   \"order\"   \"family\"  \"genus\"   \"species\""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_compare_mds.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform an MDS analysis from a sourmash compare output and produce a tidy data.frame — make_compare_mds","title":"Perform an MDS analysis from a sourmash compare output and produce a tidy data.frame — make_compare_mds","text":"Perform MDS analysis sourmash compare output produce tidy data.frame","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_compare_mds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform an MDS analysis from a sourmash compare output and produce a tidy data.frame — make_compare_mds","text":"","code":"make_compare_mds(compare_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_compare_mds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform an MDS analysis from a sourmash compare output and produce a tidy data.frame — make_compare_mds","text":"compare_df data frame produced read_compare_csv() representing (dis)similarity matrix output sourmash compare.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_compare_mds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform an MDS analysis from a sourmash compare output and produce a tidy data.frame — make_compare_mds","text":"data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_compare_mds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform an MDS analysis from a sourmash compare output and produce a tidy data.frame — make_compare_mds","text":"","code":"if (FALSE) { make_compare_mds(compare_df) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an expression vector for italicizing a subset of a vector — make_expression","title":"Make an expression vector for italicizing a subset of a vector — make_expression","text":"Make expression vector italicizing subset vector","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an expression vector for italicizing a subset of a vector — make_expression","text":"","code":"make_expression(x, plain = NULL)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an expression vector for italicizing a subset of a vector — make_expression","text":"x character vector. plain character vector specifying string keep regular (italic) format.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/make_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an expression vector for italicizing a subset of a vector — make_expression","text":"expression-formatted vector.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pivot_wider_taxonomy_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot sourmash_taxonomy_results to wide format — pivot_wider_taxonomy_annotate","title":"Pivot sourmash_taxonomy_results to wide format — pivot_wider_taxonomy_annotate","text":"Pivot sourmash_taxonomy_results wide format","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pivot_wider_taxonomy_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot sourmash_taxonomy_results to wide format — pivot_wider_taxonomy_annotate","text":"","code":"pivot_wider_taxonomy_annotate(taxonomy_annotate_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pivot_wider_taxonomy_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot sourmash_taxonomy_results to wide format — pivot_wider_taxonomy_annotate","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate long format.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/pivot_wider_taxonomy_annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot sourmash_taxonomy_results to wide format — pivot_wider_taxonomy_annotate","text":"data frame wide format. Variables expanded n_unique_kmers colnames query_name.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap from a tibble of sourmash compare results. — plot_compare_heatmap","title":"Plot a heatmap from a tibble of sourmash compare results. — plot_compare_heatmap","text":"Plot heatmap tibble sourmash compare results.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap from a tibble of sourmash compare results. — plot_compare_heatmap","text":"","code":"plot_compare_heatmap(compare_df, seed = 42, ...)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap from a tibble of sourmash compare results. — plot_compare_heatmap","text":"compare_df tibble data.frame produced read_compare_csv() representing (dis)similarity matrix output sourmash compare. seed Random seed function. Default 42. Ensures repeatable plot outputs. ... Arguments passed base::heatmap().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a heatmap from a tibble of sourmash compare results. — plot_compare_heatmap","text":"plot sourmash compare results.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap from a tibble of sourmash compare results. — plot_compare_heatmap","text":"","code":"if (FALSE) { plot_compare_heatmap() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_mds.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an MDS data.frame produced from the output of sourmash compare — plot_compare_mds","title":"Plot an MDS data.frame produced from the output of sourmash compare — plot_compare_mds","text":"Plot MDS data.frame produced output sourmash compare","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_mds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an MDS data.frame produced from the output of sourmash compare — plot_compare_mds","text":"","code":"plot_compare_mds(compare_mds, label = TRUE)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_mds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an MDS data.frame produced from the output of sourmash compare — plot_compare_mds","text":"compare_mds data.frame produced using make_compare_mds() label Boolean controlling whether sample labels added plot. default, TRUE, plots labels.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_mds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an MDS data.frame produced from the output of sourmash compare — plot_compare_mds","text":"ggplot2 plot.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_compare_mds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an MDS data.frame produced from the output of sourmash compare — plot_compare_mds","text":"","code":"if (FALSE) { plot_compare_mds(compare_mds) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_classified.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the classified and unclassified fraction of many samples using sourmash gather results. — plot_gather_classified","title":"Visualize the classified and unclassified fraction of many samples using sourmash gather results. — plot_gather_classified","text":"`plot_gather_classified()` produces ggplot2 plot classified unclassified fraction many samples data frame sourmash gather results.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_classified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the classified and unclassified fraction of many samples using sourmash gather results. — plot_gather_classified","text":"","code":"plot_gather_classified(gather_df)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_classified.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the classified and unclassified fraction of many samples using sourmash gather results. — plot_gather_classified","text":"gather_df data frame multiple sourmash gather results created `read_gather()`.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_classified.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the classified and unclassified fraction of many samples using sourmash gather results. — plot_gather_classified","text":"ggplot2 plot.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_classified.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the classified and unclassified fraction of many samples using sourmash gather results. — plot_gather_classified","text":"","code":"if (FALSE) { plot_gather_classified(gather_df) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_upset.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the intersection of genome accessions in sourmash gather results from many samples — plot_gather_upset","title":"Visualize the intersection of genome accessions in sourmash gather results from many samples — plot_gather_upset","text":"`plot_gather_upset` uses `ComplexUpset::upset()` plot intersection genome accessions sourmash gather results many samples. plot can optionally colored database genome accession originated. based ggplot2, `ComplexUpset::upset()` difficult syntax parameterize. produce alternative visualization, may easiest run `sourmashconsumr::plot_gather_upset` retrieve function source code alter .","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_upset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the intersection of genome accessions in sourmash gather results from many samples — plot_gather_upset","text":"","code":"plot_gather_upset(   upset_df,   color_by_database = FALSE,   gather_df = NULL,   palette = NULL,   ... )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_upset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the intersection of genome accessions in sourmash gather results from many samples — plot_gather_upset","text":"upset_df upset plot compliant data frame like produced from_gather_to_upset_df. color_by_database Boolean indicating whether fill upset plot instersection bar plot database results came . FALSE default. gather_df Gather results passed from_gather_to_upset_df create input data frame. NULL unless color_by_database set TRUE. palette Optional argument specifying palette use. Ignored unless color_by_database set TRUE. Defaults RColorBrewer Set2 color_by_database set TRUE palette specified. ... Arguments passed ComplexUpset::upset().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_upset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the intersection of genome accessions in sourmash gather results from many samples — plot_gather_upset","text":"ComplexUpset plot.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_gather_upset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the intersection of genome accessions in sourmash gather results from many samples — plot_gather_upset","text":"","code":"if (FALSE) { plot_gather_upset(upset_df) }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_rarefaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a rarefaction curve to determine sequence saturation — plot_signatures_rarefaction","title":"Plot a rarefaction curve to determine sequence saturation — plot_signatures_rarefaction","text":"`plot_signatures_rarefaction()` produces ggplot2 plot tidy data frame output `from_signatures_to_rarefaction_df()`. Since rarefaction curves may contain many dense points, `fraction_of_points_to_plot` argument reduces total number points rendered decreases functions run time. Rarefaction curves end shallow slow likely represent samples sequenced deeply enough capture k-mer diversity sequence.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_rarefaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a rarefaction curve to determine sequence saturation — plot_signatures_rarefaction","text":"","code":"plot_signatures_rarefaction(rarefaction_df, fraction_of_points_to_plot = 500)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_rarefaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a rarefaction curve to determine sequence saturation — plot_signatures_rarefaction","text":"rarefaction_df tidy data frame returned `from_signatures_to_rarefaction_df()`. Must contain columns `num_kmers_sampled`, `num_kmers_observed`. fraction_of_points_to_plot Integer. 1 every `fraction_of_points_to_plot` plotted.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_rarefaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a rarefaction curve to determine sequence saturation — plot_signatures_rarefaction","text":"ggplot2 object.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_rarefaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a rarefaction curve to determine sequence saturation — plot_signatures_rarefaction","text":"","code":"if (FALSE) { plot_signatures_rarefaction() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_upset.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the intersection of minhashes in sourmash signatures from many samples — plot_signatures_upset","title":"Visualize the intersection of minhashes in sourmash signatures from many samples — plot_signatures_upset","text":"`plot_signatures_upset` uses `ComplexUpset::upset()` plot intersection minhashes sourmash signatures many samples. based ggplot2, `ComplexUpset::upset()` difficult syntax parameterize. produce alternative visualization, may easiest run `sourmashconsumr::plot_signatures_upset` retrieve function source code alter .","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_upset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the intersection of minhashes in sourmash signatures from many samples — plot_signatures_upset","text":"","code":"plot_signatures_upset(upset_df, ...)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_upset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the intersection of minhashes in sourmash signatures from many samples — plot_signatures_upset","text":"upset_df upset-compliant data frame. ... Arguments passed ComplexUpset::upset().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_upset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the intersection of minhashes in sourmash signatures from many samples — plot_signatures_upset","text":"upset plot produced ComplexUpset::upset().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_signatures_upset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the intersection of minhashes in sourmash signatures from many samples — plot_signatures_upset","text":"","code":"if (FALSE) { plot_signatures_upset() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_sankey.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a sankey diagram from taxonomic lineages from one or many samples — plot_taxonomy_annotate_sankey","title":"Visualize a sankey diagram from taxonomic lineages from one or many samples — plot_taxonomy_annotate_sankey","text":"`plot_taxonomy_annotate_sankey()` plots sankey diagram output sourmash taxonomy annotate. input data frame can contain one many samples. many samples, abundances lineage summarized sample-level information lost. parameter `tax_glom_level` specified, plot summarized taxonomic rank (e.g. \"order\" specified, domain, phylum, class, order plotted).","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_sankey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a sankey diagram from taxonomic lineages from one or many samples — plot_taxonomy_annotate_sankey","text":"","code":"plot_taxonomy_annotate_sankey(   taxonomy_annotate_df,   tax_glom_level = NULL,   palette = NULL,   label = TRUE )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_sankey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a sankey diagram from taxonomic lineages from one or many samples — plot_taxonomy_annotate_sankey","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate. Can contain results one many runs sourmash taxonomy annotate. specified, agglomeration occurs across queries. tax_glom_level Optional character string specifying taxonomic rank agglomerate k-mer counts. Must one \"domain\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species.\" palette Optional character vector specifying palette. Colors palette recycled across taxonomic labels. palette specified, RColorBrewer's Set2 default. label Boolean controlling whether taxonomy labels added plot. default, TRUE, plots labels. Setting FALSE removes labels can used control label appearances; add layer `ggforce::geom_parallel_sets_labels()` re-add labels use arguments passed `ggplot2::layer()` control appearance output.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_sankey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize a sankey diagram from taxonomic lineages from one or many samples — plot_taxonomy_annotate_sankey","text":"ggplot2 plot","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_sankey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize a sankey diagram from taxonomic lineages from one or many samples — plot_taxonomy_annotate_sankey","text":"","code":"if (FALSE) { plot_taxonomy_annotate_sankey() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_ts_alluvial.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize an allivual flow plot from taxonomic lineages from one or many samples — plot_taxonomy_annotate_ts_alluvial","title":"Visualize an allivual flow plot from taxonomic lineages from one or many samples — plot_taxonomy_annotate_ts_alluvial","text":"`plot_taxonomy_annotate_ts_alluvial()` creates alluvial flow diagram output sourmash taxonomy annotate metagenomes sequenced time series.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_ts_alluvial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize an allivual flow plot from taxonomic lineages from one or many samples — plot_taxonomy_annotate_ts_alluvial","text":"","code":"plot_taxonomy_annotate_ts_alluvial(   taxonomy_annotate_df,   time_df,   tax_glom_level = NULL,   fraction_threshold = 0.01,   label = TRUE,   palette = NULL )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_ts_alluvial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize an allivual flow plot from taxonomic lineages from one or many samples — plot_taxonomy_annotate_ts_alluvial","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate. Can contain results one many runs sourmash taxonomy annotate. specified, agglomeration occurs per query. time_df data frame. first column contain values query_name column taxonomy_annotate_df called \"query_name\". second column indicate time sample taken named \"time\". plot requires time specified numeric values (e.g. samples taken 2 weeks, 1 month, 2 months, values specified 0.5, 1, 2); allows function appropriately sort bound x axis. tax_glom_level Optional character string specifying taxonomic rank agglomerate fraction metagenome matched genome database (f_unique_to_query). Must one \"domain\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species.\" fraction_threshold number 0-1. Defaults 0.01. minimum fraction taxonomic lineage needs occur least one time series sample lineage alluvial ribbon final plot. Lineages occur threshold grouped \"\" category. label Boolean controlling whether taxonomy labels added plot. default, TRUE, plots labels. Setting FALSE removes labels can used control label appearances; add layer `ggalluvial::stat_alluvium(geom = \"text\")` re-add labels use arguments passed `ggplot2::layer()` control appearance output. palette optional character vector palette values passed `scale_fill_manual(values = palette)`. palette specified, RColorBrewer's Set2 default.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_ts_alluvial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize an allivual flow plot from taxonomic lineages from one or many samples — plot_taxonomy_annotate_ts_alluvial","text":"ggplot2 plot","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_ts_alluvial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize an allivual flow plot from taxonomic lineages from one or many samples — plot_taxonomy_annotate_ts_alluvial","text":"","code":"if (FALSE) { plot_taxonomy_annotate_ts_alluvial() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_upset.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize an upset plot of taxonomic lineage intersections between samples — plot_taxonomy_annotate_upset","title":"Visualize an upset plot of taxonomic lineage intersections between samples — plot_taxonomy_annotate_upset","text":"`plot_taxonomy_annotate_upset()` produces ComplexUpset plot displaying intersection taxonomic lineages observed many samples. bar chart displays intersection size samples can optionally colored taxonomy lineage (e.g. phylum).","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_upset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize an upset plot of taxonomic lineage intersections between samples — plot_taxonomy_annotate_upset","text":"","code":"plot_taxonomy_annotate_upset(upset_inputs, fill = NULL, palette = NULL, ...)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_upset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize an upset plot of taxonomic lineage intersections between samples — plot_taxonomy_annotate_upset","text":"upset_inputs List inputs produced from_taxonomy_annotate_to_upset_inputs(). fill Optional argument specifying level taxonomy fill upset plot intersections . levels upset_inputs$tax_glom_level valid. Uses Set2 palette visualize 8 levels. palette optional character vector specifying color palette use. Ignored fill set. Defaults colors RColorBrewer Set2. ... Arguments passed ComplexUpset::upset().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_upset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize an upset plot of taxonomic lineage intersections between samples — plot_taxonomy_annotate_upset","text":"ComplexUpset plot","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/plot_taxonomy_annotate_upset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize an upset plot of taxonomic lineage intersections between samples — plot_taxonomy_annotate_upset","text":"","code":"if (FALSE) { plot_taxonomy_annotate_upset() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_compare_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CSV file output by sourmash compare — read_compare_csv","title":"Read a CSV file output by sourmash compare — read_compare_csv","text":"Read CSV file output sourmash compare","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_compare_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CSV file output by sourmash compare — read_compare_csv","text":"","code":"read_compare_csv(file, sample_to_rownames = F, ...)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_compare_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CSV file output by sourmash compare — read_compare_csv","text":"file path file output sourmash compare using --csv flag sample_to_rownames Boolean indicating whether sample names added tibble column rowname ... Arguments passed readr::read_csv()","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_compare_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CSV file output by sourmash compare — read_compare_csv","text":"tibble.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_compare_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CSV file output by sourmash compare — read_compare_csv","text":"","code":"if (FALSE) { read_compare_csv(\"\") }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_gather.html","id":null,"dir":"Reference","previous_headings":"","what":"Read CSV file or files output by sourmash gather — read_gather","title":"Read CSV file or files output by sourmash gather — read_gather","text":"`read_gather()` reads one many CSV files produced command line function sourmash taxonomy annotate. Genome matches can filtered `intersect_bp_threshold`, whose default value 0 base pairs.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_gather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read CSV file or files output by sourmash gather — read_gather","text":"","code":"read_gather(file, intersect_bp_threshold = 0, ...)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_gather.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read CSV file or files output by sourmash gather — read_gather","text":"file Path CSV file files output sourmash gather. intersect_bp_threshold Integer. Gather matches must intersect_bp greater equal value. ... Arguments passed read_csv().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_gather.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read CSV file or files output by sourmash gather — read_gather","text":"tibble.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_gather.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read CSV file or files output by sourmash gather — read_gather","text":"","code":"if (FALSE) { read_gather() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature.html","id":null,"dir":"Reference","previous_headings":"","what":"Read sourmash signature or signatures into a dataframe — read_signature","title":"Read sourmash signature or signatures into a dataframe — read_signature","text":"`read_signature()` reads one many signatures (JSON files) produced command line function sourmash sketch (previously sourmash compute).","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read sourmash signature or signatures into a dataframe — read_signature","text":"","code":"read_signature(file, compliant = TRUE)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read sourmash signature or signatures into a dataframe — read_signature","text":"file Path signature (json) file files output sourmash sketch (previously sourmash compute). compliant Boolean indicating whether signature columns compliant; json fields changed across versions sourmash. may drop deprecated columns like 'type' allow bind many signatures single data frame even sketched different versions sourmash.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read sourmash signature or signatures into a dataframe — read_signature","text":"tibble.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read sourmash signature or signatures into a dataframe — read_signature","text":"","code":"if (FALSE) { read_signature() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Read one sourmash signature into a dataframe — read_signature_one","title":"Read one sourmash signature into a dataframe — read_signature_one","text":"`read_signature_one` reads one signature data frame. mostly dummy function, breaking way allows one many files passed `read_signature`.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read one sourmash signature into a dataframe — read_signature_one","text":"","code":"read_signature_one(file, compliant = TRUE)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read one sourmash signature into a dataframe — read_signature_one","text":"file Path signature (json) file output sourmash sketch (previously sourmash compute). compliant Boolean indicating whether signature columns compliant; json fields changed across versions sourmash. may drop deprecated columns like 'type' allow bind many signatures single data frame even sketched different versions sourmash.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read one sourmash signature into a dataframe — read_signature_one","text":"tibble.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_signature_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read one sourmash signature into a dataframe — read_signature_one","text":"","code":"if (FALSE) { read_signature(\"tests/testthat/SRR18071810.sig\") }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_taxonomy_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Read CSV file or files output by sourmash taxonomy annotate — read_taxonomy_annotate","title":"Read CSV file or files output by sourmash taxonomy annotate — read_taxonomy_annotate","text":"`read_taxonomy_annotate()` reads one many CSV files produced command line function sourmash taxonomy annotate. Genome matches can filtered `intersect_bp_threshold`, whose default value 0 base pairs. adds column `n_unique_kmers`, abundance-weighted number unique k-mers overlapping query match. output columns sourmash gather, extension sourmash taxonomy, sometimes increase new versions sourmash, function emit warning columns missing CSV file. warning can safely ignored marks results generated earlier version sourmash, re-run sourmash gather, additional information output.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_taxonomy_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read CSV file or files output by sourmash taxonomy annotate — read_taxonomy_annotate","text":"","code":"read_taxonomy_annotate(   file,   intersect_bp_threshold = 0,   separate_lineage = T,   ... )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_taxonomy_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read CSV file or files output by sourmash taxonomy annotate — read_taxonomy_annotate","text":"file Path CSV file files output sourmash taxonomy annotate. intersect_bp_threshold Integer. Gather matches must intersect_bp greater equal value. separate_lineage Boolean. Read lineage single column separate taxonomic level column. ... Arguments passed read_csv().","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_taxonomy_annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read CSV file or files output by sourmash taxonomy annotate — read_taxonomy_annotate","text":"tibble.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/read_taxonomy_annotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read CSV file or files output by sourmash taxonomy annotate — read_taxonomy_annotate","text":"","code":"if (FALSE) { read_taxonomy_annotate() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/tax_glom_taxonomy_annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Agglomerate counts of same lineage to specified level of taxonomy. — tax_glom_taxonomy_annotate","title":"Agglomerate counts of same lineage to specified level of taxonomy. — tax_glom_taxonomy_annotate","text":"Inspired phyloseq::tax_glom(), method summarizes numeric variables genomes taxonomy user-specified taxonomy rank. Agglomeration occurs within sample, meaning user-specified variable summed within query_name. function returns data frame columns `lineage`, `query_name`, glom_var column specified. accepted glom_vars can agglomerated f_unique_to_query, f_unique_weighted, unique_intersect_bp, n_unique_kmers. variables deals \"unique\" fraction gather match, meaning double counting query genome matched. f_unique_weighted n_unique_kmers weighted k-mer abundance f_unique_to_query unique_intersect_bp . f_unique_weighted similar relative abundance (\"f\" stands fraction -- 100 n_unique_kmers abundance-weighted number unique hashes (k-mers) overlapped query match database. number calculated dividing unique_intersect_bp scaled value multiplying value average k-mer abundance. variables (like f_orig_query) sum > 1. one variable agglomerated time.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/tax_glom_taxonomy_annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agglomerate counts of same lineage to specified level of taxonomy. — tax_glom_taxonomy_annotate","text":"","code":"tax_glom_taxonomy_annotate(   taxonomy_annotate_df,   tax_glom_level = NULL,   glom_var = \"n_unique_kmers\" )"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/tax_glom_taxonomy_annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agglomerate counts of same lineage to specified level of taxonomy. — tax_glom_taxonomy_annotate","text":"taxonomy_annotate_df Data frame containing outputs sourmash taxonomy annotate. Can contain results one many runs sourmash taxonomy annotate. Agglomeration occurs within query. tax_glom_level Character. NULL default, meaning agglomeration done. Valid options \"domain\", \"phylum\", \"class\", \"order\", \"family\", \"genus\", \"species\". valid option supplied, k-mer counts agglomerated level glom_var Character. One f_unique_to_query, f_unique_weighted, unique_intersect_bp, n_unique_kmers.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/tax_glom_taxonomy_annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Agglomerate counts of same lineage to specified level of taxonomy. — tax_glom_taxonomy_annotate","text":"data frame.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/tax_glom_taxonomy_annotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Agglomerate counts of same lineage to specified level of taxonomy. — tax_glom_taxonomy_annotate","text":"Selecting glom_var use downstream use cases can difficult. frequently use f_unique_weighted n_unique_kmers account number times k-mer occurs data set. closer counting number reads map reference genome metrics. downstream use case deals relative abundance, f_unique_weighted good choice. downstream use case needs count data, use n_unique_kmers. divide scaled value generate number, value much lower read mapping. However, way returns actual number k-mers sourmash counted. tends work better assumptions made downstream statistical tools (e.g. differential abundance analysis, machine learning, etc.).","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/tax_glom_taxonomy_annotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agglomerate counts of same lineage to specified level of taxonomy. — tax_glom_taxonomy_annotate","text":"","code":"if (FALSE) { tax_glom_taxonomy_annotate() }"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/warning_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Warning handler to suppress warning message that contains ","title":"Warning handler to suppress warning message that contains ","text":"Function suppress warning messages produced `read_gather()` `read_taxonomy_annotate()` results generated earlier versions sourmash output columns output current version sourmash gather.","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/warning_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warning handler to suppress warning message that contains ","text":"","code":"warning_handler(w)"},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/warning_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warning handler to suppress warning message that contains ","text":"w Warning passed function withCallingHandlers()","code":""},{"path":"https://arcadia-science.github.io/sourmashconsumr/reference/warning_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warning handler to suppress warning message that contains ","text":"object created first argument passed function without warning warning contains \"following named parsers match column names:\"","code":""},{"path":[]}]
